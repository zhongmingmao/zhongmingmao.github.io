---
title: 架构 -- 汇编语言
date: 2019-04-23 00:51:47
categories:
    - Architecture
tags:
    - Architecture
---

## 史前时代
1. 在第一门面向程序员的编程语言出现前，只能通过理解**CPU指令的二进制表示**，将程序以**二进制数据的方式**刻录到存储上
2. 这个时期，**编程的效率极其低下**，软件和硬件的边界还非常**模糊**，把程序刻录到存储上往往还涉及到硬件的**电气操作**

<!-- more -->

## 汇编语言
1. 为了解决**编程效率**的问题，诞生了汇编语言（和解释它的编译器）
2. 汇编语言的编译器将汇编语言写的程序编译成**CPU指令序列**，并将其保存到**外置存储**上
3. 汇编语言**非常接近**计算机的CPU指令，一条汇编指令基本和一条CPU指令**一一对应**

### 意义
1. 汇编语言的出现，让编程成为了一个**纯软件**行为
2. 程序员可以**反复修改**汇编程序，然后通过汇编编译器将其翻译成机器语言，并写入到外置存储中

### 效率优化
1. 用**文本符号**表达**机器指令**
    - 例如add表示加法运算，而不用记忆对应的CPU指令的二进制表示
2. 用**文本符号**表达要操作的**内存地址**，并支持**内存地址的自动分配**
    - 例如使用了一段文本Hello，那么汇编编译器将为程序开辟一段**静态存储区**（数据段）来存放这段文本
    - 并用一个文本符号（变量名）指向它，用**变量名**去表达一段内存数据
    - 这样就**不用关注内存的物理地址**，而把精力放在程序的逻辑表达上
3. 用**文本符号**表达要调用的**函数地址**
    - 对**CPU指令**来说，_**函数只有地址没有名字**_
    - 从**编程**的角度来说，_**函数是机器指令的扩展**_
    - 和机器指令需要用文本符号助记一样，函数的名称也需要用文本符号来助记
4. 用**文本符号**表达要**跳转的目标地址**
    - 在高级语言里，流程控制的语法很多，例如goto/if/else/for/while/until等
    - 在**汇编语言**里，只有两个基本的跳转指令：无条件跳转（**jmp**）和条件跳转（**je/jne**）
    - 同样，跳转的目标地址用文本符号有助于程序逻辑的表达，而无需把精力放在具体的指令跳转地址上
5. 小结
    - 汇编从**指令能力**上来说，和**机器指令**是**一致**的
    - 汇编把人们从**物理硬件地址**中解脱出来，_**专注于程序逻辑的表达**_

## MVP
1. 键盘和显示器的驱动程序
2. 当时最主流的外置存储设备的驱动程序
3. 汇编程序**编辑器**：可以从存储中读取汇编程序代码，修改并保存到存储中
4. 汇编程序**编译器**：可以将汇编代码编译成机器代码，并保存在存储中
5. 执行机器代码的程序：可以执行一段保存在外置存储设备中的机器代码

## 汇编与操作系统
1. 汇编程序的出现要**早于**操作系统
2. 操作系统的**核心目标**是**软件治理**，只有在计算机需要管理很多任务时，才需要操作系统

<!-- indicate-the-source -->
