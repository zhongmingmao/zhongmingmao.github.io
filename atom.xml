<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>ByteCoding</title>
  
  
  <link href="https://blog.zhongmingmao.top/atom.xml" rel="self"/>
  
  <link href="https://blog.zhongmingmao.top/"/>
  <updated>2024-12-05T04:22:53.902Z</updated>
  <id>https://blog.zhongmingmao.top/</id>
  
  <author>
    <name>zhongmingmao</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Java Feature - Type Matching</title>
    <link href="https://blog.zhongmingmao.top/2024/10/12/java-feature-type-matching/"/>
    <id>https://blog.zhongmingmao.top/2024/10/12/java-feature-type-matching/</id>
    <published>2024-10-11T16:06:25.000Z</published>
    <updated>2024-12-05T04:22:53.902Z</updated>
    
    
    <summary type="html">&lt;h1 id=&quot;模式匹配&quot;&gt;&lt;a href=&quot;#模式匹配&quot; class=&quot;headerlink&quot; title=&quot;模式匹配&quot;&gt;&lt;/a&gt;模式匹配&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt;匹配谓词 + 匹配变量&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ol&gt;
&lt;li&gt;Java &lt;strong&gt;模式匹配&lt;/strong&gt;是一个&lt;strong&gt;新型&lt;/strong&gt;的、还在&lt;strong&gt;持续快速演进&lt;/strong&gt;的领域&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;类型匹配&lt;/strong&gt;是&lt;strong&gt;模式匹配&lt;/strong&gt;的一个&lt;strong&gt;规范&lt;/strong&gt;，在 &lt;strong&gt;JDK 16&lt;/strong&gt; 正式发布&lt;/li&gt;
&lt;li&gt;一个&lt;strong&gt;模式&lt;/strong&gt;是&lt;strong&gt;匹配谓词&lt;/strong&gt;和&lt;strong&gt;匹配变量&lt;/strong&gt;的组合&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;匹配谓词&lt;/strong&gt;用来确定模式和目标&lt;strong&gt;是否匹配&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;在&lt;strong&gt;模式和目标匹配&lt;/strong&gt;的情况下，&lt;strong&gt;匹配变量&lt;/strong&gt;是从&lt;strong&gt;匹配目标&lt;/strong&gt;中&lt;strong&gt;提取&lt;/strong&gt;出来的&lt;strong&gt;一个或多个变量&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;对&lt;strong&gt;类型匹配&lt;/strong&gt;来说&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;匹配谓词&lt;/strong&gt;用来&lt;strong&gt;指定模式的数据类型&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;匹配变量&lt;/strong&gt;数属于该&lt;strong&gt;类型&lt;/strong&gt;的&lt;strong&gt;数据变量&lt;/strong&gt; - 只有&lt;strong&gt;一个&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;</summary>
    
    
    
    <category term="Java" scheme="https://blog.zhongmingmao.top/categories/java/"/>
    
    <category term="Feature" scheme="https://blog.zhongmingmao.top/categories/java/feature/"/>
    
    
    <category term="Java" scheme="https://blog.zhongmingmao.top/tags/java/"/>
    
    <category term="Java Feature" scheme="https://blog.zhongmingmao.top/tags/java-feature/"/>
    
  </entry>
  
  <entry>
    <title>Java Feature - Sealed</title>
    <link href="https://blog.zhongmingmao.top/2024/10/11/java-feature-sealed/"/>
    <id>https://blog.zhongmingmao.top/2024/10/11/java-feature-sealed/</id>
    <published>2024-10-10T16:06:25.000Z</published>
    <updated>2024-12-04T12:09:18.080Z</updated>
    
    
    <summary type="html">&lt;h1 id=&quot;概述&quot;&gt;&lt;a href=&quot;#概述&quot; class=&quot;headerlink&quot; title=&quot;概述&quot;&gt;&lt;/a&gt;概述&lt;/h1&gt;&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;封闭类&lt;/strong&gt;在 &lt;strong&gt;JDK 17&lt;/strong&gt; 正式发布&lt;/li&gt;
&lt;/ol&gt;</summary>
    
    
    
    <category term="Java" scheme="https://blog.zhongmingmao.top/categories/java/"/>
    
    <category term="Feature" scheme="https://blog.zhongmingmao.top/categories/java/feature/"/>
    
    
    <category term="Java" scheme="https://blog.zhongmingmao.top/tags/java/"/>
    
    <category term="Java Feature" scheme="https://blog.zhongmingmao.top/tags/java-feature/"/>
    
  </entry>
  
  <entry>
    <title>Java Feature - Record</title>
    <link href="https://blog.zhongmingmao.top/2024/10/10/java-feature-record/"/>
    <id>https://blog.zhongmingmao.top/2024/10/10/java-feature-record/</id>
    <published>2024-10-09T16:06:25.000Z</published>
    <updated>2024-12-04T02:43:48.242Z</updated>
    
    
    <summary type="html">&lt;h1 id=&quot;概述&quot;&gt;&lt;a href=&quot;#概述&quot; class=&quot;headerlink&quot; title=&quot;概述&quot;&gt;&lt;/a&gt;概述&lt;/h1&gt;&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;Record&lt;/strong&gt; 在 &lt;strong&gt;JDK 16&lt;/strong&gt; 正式发布&lt;/li&gt;
&lt;li&gt;Record 用来表示&lt;strong&gt;不可变数据&lt;/strong&gt;的&lt;strong&gt;透明载体&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;</summary>
    
    
    
    <category term="Java" scheme="https://blog.zhongmingmao.top/categories/java/"/>
    
    <category term="Feature" scheme="https://blog.zhongmingmao.top/categories/java/feature/"/>
    
    
    <category term="Java" scheme="https://blog.zhongmingmao.top/tags/java/"/>
    
    <category term="Java Feature" scheme="https://blog.zhongmingmao.top/tags/java-feature/"/>
    
  </entry>
  
  <entry>
    <title>Java Feature - Text Blocks</title>
    <link href="https://blog.zhongmingmao.top/2024/10/09/java-feature-text-blocks/"/>
    <id>https://blog.zhongmingmao.top/2024/10/09/java-feature-text-blocks/</id>
    <published>2024-10-08T16:06:25.000Z</published>
    <updated>2024-12-03T10:33:10.097Z</updated>
    
    
    <summary type="html">&lt;h1 id=&quot;概述&quot;&gt;&lt;a href=&quot;#概述&quot; class=&quot;headerlink&quot; title=&quot;概述&quot;&gt;&lt;/a&gt;概述&lt;/h1&gt;&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;Text Blocks&lt;/strong&gt; 在 &lt;strong&gt;JDK 15&lt;/strong&gt; 正式发布&lt;/li&gt;
&lt;li&gt;Text Blocks 是一个由&lt;strong&gt;多行文字&lt;/strong&gt;构成的&lt;strong&gt;字符串&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;</summary>
    
    
    
    <category term="Java" scheme="https://blog.zhongmingmao.top/categories/java/"/>
    
    <category term="Feature" scheme="https://blog.zhongmingmao.top/categories/java/feature/"/>
    
    
    <category term="Java" scheme="https://blog.zhongmingmao.top/tags/java/"/>
    
    <category term="Java Feature" scheme="https://blog.zhongmingmao.top/tags/java-feature/"/>
    
  </entry>
  
  <entry>
    <title>Java Feature - JShell</title>
    <link href="https://blog.zhongmingmao.top/2024/10/08/java-feature-jshell/"/>
    <id>https://blog.zhongmingmao.top/2024/10/08/java-feature-jshell/</id>
    <published>2024-10-07T16:06:25.000Z</published>
    <updated>2024-12-02T11:25:07.265Z</updated>
    
    
    <summary type="html">&lt;h1 id=&quot;概述&quot;&gt;&lt;a href=&quot;#概述&quot; class=&quot;headerlink&quot; title=&quot;概述&quot;&gt;&lt;/a&gt;概述&lt;/h1&gt;&lt;ol&gt;
&lt;li&gt;JShell 在 &lt;strong&gt;JDK 9&lt;/strong&gt; 中正式发布&lt;/li&gt;
&lt;li&gt;JShell API 和工具提供了一种在 &lt;strong&gt;JShell 状态&lt;/strong&gt;下&lt;strong&gt;交互式评估&lt;/strong&gt; Java 编程语言的&lt;strong&gt;声明&lt;/strong&gt;、&lt;strong&gt;语句&lt;/strong&gt;和&lt;strong&gt;表达式&lt;/strong&gt;的方法&lt;/li&gt;
&lt;li&gt;JShell 的状态包括&lt;strong&gt;不断发展&lt;/strong&gt;的&lt;strong&gt;代码&lt;/strong&gt;和&lt;strong&gt;执行状态&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;为了&lt;strong&gt;快速&lt;/strong&gt;调查和编码，&lt;strong&gt;语句&lt;/strong&gt;和&lt;strong&gt;表达式&lt;/strong&gt;不需要出现在&lt;strong&gt;方法&lt;/strong&gt;中，&lt;strong&gt;变量&lt;/strong&gt;和&lt;strong&gt;方法&lt;/strong&gt;也不需要出现在&lt;strong&gt;类&lt;/strong&gt;中&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;JShell&lt;/strong&gt; 在验证&lt;strong&gt;简单问题&lt;/strong&gt;时，比 &lt;strong&gt;IDE&lt;/strong&gt; 更&lt;strong&gt;高效&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;</summary>
    
    
    
    <category term="Java" scheme="https://blog.zhongmingmao.top/categories/java/"/>
    
    <category term="Feature" scheme="https://blog.zhongmingmao.top/categories/java/feature/"/>
    
    
    <category term="Java" scheme="https://blog.zhongmingmao.top/tags/java/"/>
    
    <category term="Java Feature" scheme="https://blog.zhongmingmao.top/tags/java-feature/"/>
    
  </entry>
  
  <entry>
    <title>MQ - Concept</title>
    <link href="https://blog.zhongmingmao.top/2024/10/07/mq-concept/"/>
    <id>https://blog.zhongmingmao.top/2024/10/07/mq-concept/</id>
    <published>2024-10-06T16:06:25.000Z</published>
    <updated>2024-11-30T04:13:50.871Z</updated>
    
    
    <summary type="html">&lt;h1 id=&quot;消息管道&quot;&gt;&lt;a href=&quot;#消息管道&quot; class=&quot;headerlink&quot; title=&quot;消息管道&quot;&gt;&lt;/a&gt;消息管道&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt;在系统架构中，MQ 的定位是&lt;strong&gt;消息&lt;/strong&gt;和&lt;strong&gt;管道&lt;/strong&gt;，主要起到&lt;strong&gt;解耦上下游系统&lt;/strong&gt;，&lt;strong&gt;数据缓存&lt;/strong&gt;的作用，主要操作为&lt;strong&gt;生产&lt;/strong&gt;和&lt;strong&gt;消息&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img src=&quot;https://mq-1253868755.cos.ap-guangzhou.myqcloud.com/2cb1c8245c15f3df28228af3c8b8bd8c.jpg&quot; alt=&quot;2cb1c8245c15f3df28228af3c8b8bd8c&quot;&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="MQ" scheme="https://blog.zhongmingmao.top/categories/mq/"/>
    
    
    <category term="MQ" scheme="https://blog.zhongmingmao.top/tags/mq/"/>
    
  </entry>
  
  <entry>
    <title>MQ - Context</title>
    <link href="https://blog.zhongmingmao.top/2024/10/06/mq-context/"/>
    <id>https://blog.zhongmingmao.top/2024/10/06/mq-context/</id>
    <published>2024-10-05T16:06:25.000Z</published>
    <updated>2024-11-29T14:38:26.435Z</updated>
    
    
    <summary type="html">&lt;h1 id=&quot;MQ&quot;&gt;&lt;a href=&quot;#MQ&quot; class=&quot;headerlink&quot; title=&quot;MQ&quot;&gt;&lt;/a&gt;MQ&lt;/h1&gt;&lt;ol&gt;
&lt;li&gt;消息队列 - 具有&lt;strong&gt;缓冲&lt;/strong&gt;作用、具备&lt;strong&gt;发布&lt;/strong&gt;和&lt;strong&gt;订阅&lt;/strong&gt;能力的&lt;strong&gt;存储引擎&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;消息队列的&lt;strong&gt;最基本&lt;/strong&gt;功能 - &lt;strong&gt;生产&lt;/strong&gt; + &lt;strong&gt;消费&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;标准消息队列 - &lt;strong&gt;功能齐全&lt;/strong&gt;&lt;ul&gt;
&lt;li&gt;在发布订阅的基础上，高阶能力 - &lt;strong&gt;死信队列&lt;/strong&gt;、&lt;strong&gt;顺序消息&lt;/strong&gt;、&lt;strong&gt;延时消息&lt;/strong&gt;等&lt;/li&gt;
&lt;li&gt;实现&lt;strong&gt;高吞吐&lt;/strong&gt;、&lt;strong&gt;低延时&lt;/strong&gt;、&lt;strong&gt;高可靠&lt;/strong&gt;的特征&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;</summary>
    
    
    
    <category term="MQ" scheme="https://blog.zhongmingmao.top/categories/mq/"/>
    
    
    <category term="MQ" scheme="https://blog.zhongmingmao.top/tags/mq/"/>
    
  </entry>
  
  <entry>
    <title>Beam - Future</title>
    <link href="https://blog.zhongmingmao.top/2024/10/05/bigdata-beam-future/"/>
    <id>https://blog.zhongmingmao.top/2024/10/05/bigdata-beam-future/</id>
    <published>2024-10-04T16:06:25.000Z</published>
    <updated>2024-11-21T15:55:16.320Z</updated>
    
    
    <summary type="html">&lt;h1 id=&quot;技术迭代&quot;&gt;&lt;a href=&quot;#技术迭代&quot; class=&quot;headerlink&quot; title=&quot;技术迭代&quot;&gt;&lt;/a&gt;技术迭代&lt;/h1&gt;&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;2006&lt;/strong&gt;，Apache &lt;strong&gt;Hadoop&lt;/strong&gt; 发布，基于 &lt;strong&gt;MapReduce&lt;/strong&gt; 计算模型&lt;/li&gt;
&lt;li&gt;2009，&lt;strong&gt;Spark&lt;/strong&gt; 计算框架在 加州伯克利大学诞生，于 &lt;strong&gt;2010&lt;/strong&gt; 年&lt;strong&gt;开源&lt;/strong&gt;，于 &lt;strong&gt;2014&lt;/strong&gt; 年成为 &lt;strong&gt;Apache 的顶级项目&lt;/strong&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Spark&lt;/strong&gt; 的数据&lt;strong&gt;处理效率&lt;/strong&gt;远在 &lt;strong&gt;Hadoop&lt;/strong&gt; 之上&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;2014&lt;/strong&gt;，&lt;strong&gt;Flink&lt;/strong&gt; 面世，&lt;strong&gt;流批一体&lt;/strong&gt;，于 &lt;strong&gt;2018&lt;/strong&gt; 年被阿里收购&lt;/li&gt;
&lt;/ol&gt;</summary>
    
    
    
    <category term="Big Data" scheme="https://blog.zhongmingmao.top/categories/big-data/"/>
    
    <category term="Beam" scheme="https://blog.zhongmingmao.top/categories/big-data/beam/"/>
    
    
    <category term="Big Data" scheme="https://blog.zhongmingmao.top/tags/big-data/"/>
    
    <category term="Beam" scheme="https://blog.zhongmingmao.top/tags/beam/"/>
    
  </entry>
  
  <entry>
    <title>Beam - Streaming</title>
    <link href="https://blog.zhongmingmao.top/2024/10/04/bigdata-beam-streaming/"/>
    <id>https://blog.zhongmingmao.top/2024/10/04/bigdata-beam-streaming/</id>
    <published>2024-10-03T16:06:25.000Z</published>
    <updated>2024-11-21T15:03:38.690Z</updated>
    
    
    <summary type="html">&lt;h1 id=&quot;有界数据-vs-无界数据&quot;&gt;&lt;a href=&quot;#有界数据-vs-无界数据&quot; class=&quot;headerlink&quot; title=&quot;有界数据 vs 无界数据&quot;&gt;&lt;/a&gt;有界数据 vs 无界数据&lt;/h1&gt;&lt;ol&gt;
&lt;li&gt;在 Beam 中，可以用&lt;strong&gt;同一个 Pipeline&lt;/strong&gt; 处理&lt;strong&gt;有界数据&lt;/strong&gt;和&lt;strong&gt;无界数据&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;无论是&lt;strong&gt;有界数据&lt;/strong&gt;还是&lt;strong&gt;无界数据&lt;/strong&gt;，在 Beam 中，都可以用&lt;strong&gt;窗口&lt;/strong&gt;把数据按&lt;strong&gt;时间&lt;/strong&gt;分割成一些&lt;strong&gt;有限大小&lt;/strong&gt;的集合&lt;ul&gt;
&lt;li&gt;对于&lt;strong&gt;无界&lt;/strong&gt;数据，&lt;strong&gt;必须&lt;/strong&gt;使用&lt;strong&gt;窗口&lt;/strong&gt;对数据进行&lt;strong&gt;分割&lt;/strong&gt;，然后对每个窗口内的数据集进行处理&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;</summary>
    
    
    
    <category term="Big Data" scheme="https://blog.zhongmingmao.top/categories/big-data/"/>
    
    <category term="Beam" scheme="https://blog.zhongmingmao.top/categories/big-data/beam/"/>
    
    
    <category term="Big Data" scheme="https://blog.zhongmingmao.top/tags/big-data/"/>
    
    <category term="Beam" scheme="https://blog.zhongmingmao.top/tags/beam/"/>
    
  </entry>
  
  <entry>
    <title>Beam - Window</title>
    <link href="https://blog.zhongmingmao.top/2024/10/03/bigdata-beam-window/"/>
    <id>https://blog.zhongmingmao.top/2024/10/03/bigdata-beam-window/</id>
    <published>2024-10-02T16:06:25.000Z</published>
    <updated>2024-11-21T10:33:16.900Z</updated>
    
    
    <summary type="html">&lt;h1 id=&quot;Window&quot;&gt;&lt;a href=&quot;#Window&quot; class=&quot;headerlink&quot; title=&quot;Window&quot;&gt;&lt;/a&gt;Window&lt;/h1&gt;&lt;ol&gt;
&lt;li&gt;在 Beam 中，&lt;strong&gt;Window&lt;/strong&gt; 将 &lt;strong&gt;PCollection&lt;/strong&gt; 里的每个&lt;strong&gt;元素&lt;/strong&gt;根据&lt;strong&gt;时间戳&lt;/strong&gt;划分成不同的&lt;strong&gt;有限数据集合&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;要将一些&lt;strong&gt;聚合操作&lt;/strong&gt;应用在 PCollection 上时，或者对不同的 PCollection 进行 &lt;strong&gt;Join&lt;/strong&gt; 操作&lt;ul&gt;
&lt;li&gt;Beam 将这些操作应用在这些被 &lt;strong&gt;Window&lt;/strong&gt; 划分好的&lt;strong&gt;不同的数据集&lt;/strong&gt;上&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;无论是&lt;strong&gt;有界数据&lt;/strong&gt;还是&lt;strong&gt;无界数据&lt;/strong&gt;，Beam 都会按&lt;strong&gt;同样的规则&lt;/strong&gt;进行处理&lt;/li&gt;
&lt;li&gt;在用 &lt;strong&gt;IO Connector&lt;/strong&gt; 读取&lt;strong&gt;有界数据集&lt;/strong&gt;的过程中，&lt;strong&gt;Read Transform&lt;/strong&gt; 会默认为&lt;strong&gt;每个元素&lt;/strong&gt;分配一个&lt;strong&gt;相同的时间戳&lt;/strong&gt;&lt;ul&gt;
&lt;li&gt;一般情况下，该时间戳为&lt;strong&gt;运行 Pipeline 的时间&lt;/strong&gt;，即&lt;strong&gt;处理时间&lt;/strong&gt; - &lt;strong&gt;Processing Time&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Beam 会为该 Pipeline 默认分配一个&lt;strong&gt;全局窗口&lt;/strong&gt; - &lt;strong&gt;Global Window&lt;/strong&gt; - 从&lt;strong&gt;无限小&lt;/strong&gt;到&lt;strong&gt;无限大&lt;/strong&gt;的时间窗口&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;</summary>
    
    
    
    <category term="Big Data" scheme="https://blog.zhongmingmao.top/categories/big-data/"/>
    
    <category term="Beam" scheme="https://blog.zhongmingmao.top/categories/big-data/beam/"/>
    
    
    <category term="Big Data" scheme="https://blog.zhongmingmao.top/tags/big-data/"/>
    
    <category term="Beam" scheme="https://blog.zhongmingmao.top/tags/beam/"/>
    
  </entry>
  
  <entry>
    <title>Beam - WordCount</title>
    <link href="https://blog.zhongmingmao.top/2024/10/02/bigdata-beam-wordcount/"/>
    <id>https://blog.zhongmingmao.top/2024/10/02/bigdata-beam-wordcount/</id>
    <published>2024-10-01T16:06:25.000Z</published>
    <updated>2024-11-21T06:51:41.687Z</updated>
    
    
    <summary type="html">&lt;h1 id=&quot;步骤&quot;&gt;&lt;a href=&quot;#步骤&quot; class=&quot;headerlink&quot; title=&quot;步骤&quot;&gt;&lt;/a&gt;步骤&lt;/h1&gt;&lt;ol&gt;
&lt;li&gt;用 &lt;strong&gt;Pipeline IO&lt;/strong&gt; 读取文本&lt;/li&gt;
&lt;li&gt;用 &lt;strong&gt;Transform&lt;/strong&gt; 对文本进行分词和词频统计&lt;/li&gt;
&lt;li&gt;用 &lt;strong&gt;Pipeline IO&lt;/strong&gt; 输出结果&lt;/li&gt;
&lt;li&gt;将所有步骤打包成一个 &lt;strong&gt;Pipeline&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;</summary>
    
    
    
    <category term="Big Data" scheme="https://blog.zhongmingmao.top/categories/big-data/"/>
    
    <category term="Beam" scheme="https://blog.zhongmingmao.top/categories/big-data/beam/"/>
    
    
    <category term="Big Data" scheme="https://blog.zhongmingmao.top/tags/big-data/"/>
    
    <category term="Beam" scheme="https://blog.zhongmingmao.top/tags/beam/"/>
    
  </entry>
  
  <entry>
    <title>Beam - Execution Engine</title>
    <link href="https://blog.zhongmingmao.top/2024/10/01/bigdata-beam-execution-engine/"/>
    <id>https://blog.zhongmingmao.top/2024/10/01/bigdata-beam-execution-engine/</id>
    <published>2024-09-30T16:06:25.000Z</published>
    <updated>2024-11-20T17:25:05.594Z</updated>
    
    
    <summary type="html">&lt;h1 id=&quot;Pipeline&quot;&gt;&lt;a href=&quot;#Pipeline&quot; class=&quot;headerlink&quot; title=&quot;Pipeline&quot;&gt;&lt;/a&gt;Pipeline&lt;/h1&gt;&lt;ol&gt;
&lt;li&gt;读取输入数据到 PCollection&lt;/li&gt;
&lt;li&gt;对读进来的 PCollection 进行 Transform，得到另一个 PCollection&lt;/li&gt;
&lt;li&gt;输出结果 PCollection&lt;/li&gt;
&lt;/ol&gt;</summary>
    
    
    
    <category term="Big Data" scheme="https://blog.zhongmingmao.top/categories/big-data/"/>
    
    <category term="Beam" scheme="https://blog.zhongmingmao.top/categories/big-data/beam/"/>
    
    
    <category term="Big Data" scheme="https://blog.zhongmingmao.top/tags/big-data/"/>
    
    <category term="Beam" scheme="https://blog.zhongmingmao.top/tags/beam/"/>
    
  </entry>
  
  <entry>
    <title>Beam - Pipeline Test</title>
    <link href="https://blog.zhongmingmao.top/2024/09/30/bigdata-beam-pipeline-test/"/>
    <id>https://blog.zhongmingmao.top/2024/09/30/bigdata-beam-pipeline-test/</id>
    <published>2024-09-29T16:06:25.000Z</published>
    <updated>2024-11-20T16:09:44.206Z</updated>
    
    
    <summary type="html">&lt;h1 id=&quot;Context&quot;&gt;&lt;a href=&quot;#Context&quot; class=&quot;headerlink&quot; title=&quot;Context&quot;&gt;&lt;/a&gt;Context&lt;/h1&gt;&lt;ol&gt;
&lt;li&gt;设计好的 Pipeline 通常需要放在&lt;strong&gt;分布式环境&lt;/strong&gt;下执行，具体每一步的 &lt;strong&gt;Transform&lt;/strong&gt; 都会被分配到&lt;strong&gt;任意机器&lt;/strong&gt;上执行&lt;/li&gt;
&lt;li&gt;如果 Pipeline &lt;strong&gt;运行出错&lt;/strong&gt;，则需要定位到&lt;strong&gt;具体机器&lt;/strong&gt;，再到上面去做&lt;strong&gt;调试&lt;/strong&gt;是&lt;strong&gt;不现实&lt;/strong&gt;的&lt;/li&gt;
&lt;li&gt;另一种办法，读取一些&lt;strong&gt;样本数据集&lt;/strong&gt;，再运行整个 Pipeline 去验证哪一步逻辑出错 - &lt;strong&gt;费时费力&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;正式将 Pipeline 放在分布式环境上运行之前，需要先&lt;strong&gt;完整地测试整个 Pipeline 逻辑&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;</summary>
    
    
    
    <category term="Big Data" scheme="https://blog.zhongmingmao.top/categories/big-data/"/>
    
    <category term="Beam" scheme="https://blog.zhongmingmao.top/categories/big-data/beam/"/>
    
    
    <category term="Big Data" scheme="https://blog.zhongmingmao.top/tags/big-data/"/>
    
    <category term="Beam" scheme="https://blog.zhongmingmao.top/tags/beam/"/>
    
  </entry>
  
  <entry>
    <title>Beam - Pattern</title>
    <link href="https://blog.zhongmingmao.top/2024/09/29/bigdata-beam-pattern/"/>
    <id>https://blog.zhongmingmao.top/2024/09/29/bigdata-beam-pattern/</id>
    <published>2024-09-28T16:06:25.000Z</published>
    <updated>2024-11-20T15:12:07.718Z</updated>
    
    
    <summary type="html">&lt;h1 id=&quot;Copier-Pattern&quot;&gt;&lt;a href=&quot;#Copier-Pattern&quot; class=&quot;headerlink&quot; title=&quot;Copier Pattern&quot;&gt;&lt;/a&gt;Copier Pattern&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt;每个&lt;strong&gt;数据处理模块&lt;/strong&gt;的&lt;strong&gt;输入&lt;/strong&gt;都是&lt;strong&gt;相同&lt;/strong&gt;的，并且每个&lt;strong&gt;数据处理模块&lt;/strong&gt;都可以&lt;strong&gt;单独&lt;/strong&gt;并且&lt;strong&gt;同步&lt;/strong&gt;地运行处理&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img src=&quot;https://big-data-1253868755.cos.ap-guangzhou.myqcloud.com/b226e637e8cba5f7c3ef938684526373.webp&quot; alt=&quot;b226e637e8cba5f7c3ef938684526373&quot;&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="Big Data" scheme="https://blog.zhongmingmao.top/categories/big-data/"/>
    
    <category term="Beam" scheme="https://blog.zhongmingmao.top/categories/big-data/beam/"/>
    
    
    <category term="Big Data" scheme="https://blog.zhongmingmao.top/tags/big-data/"/>
    
    <category term="Beam" scheme="https://blog.zhongmingmao.top/tags/beam/"/>
    
  </entry>
  
  <entry>
    <title>Beam - Pipeline IO</title>
    <link href="https://blog.zhongmingmao.top/2024/09/28/bigdata-beam-pipeline-io/"/>
    <id>https://blog.zhongmingmao.top/2024/09/28/bigdata-beam-pipeline-io/</id>
    <published>2024-09-27T16:06:25.000Z</published>
    <updated>2024-11-20T11:58:50.237Z</updated>
    
    
    <summary type="html">&lt;h1 id=&quot;读取数据集&quot;&gt;&lt;a href=&quot;#读取数据集&quot; class=&quot;headerlink&quot; title=&quot;读取数据集&quot;&gt;&lt;/a&gt;读取数据集&lt;/h1&gt;&lt;ol&gt;
&lt;li&gt;一个&lt;strong&gt;输入数据集&lt;/strong&gt;的&lt;strong&gt;读取&lt;/strong&gt;通常是通过 &lt;strong&gt;Read Transform&lt;/strong&gt; 来完成&lt;/li&gt;
&lt;li&gt;Read Transform 从&lt;strong&gt;外部源&lt;/strong&gt;读取数据 - 本地文件、数据库、OSS、MQ&lt;/li&gt;
&lt;li&gt;Read Transform 返回一个 &lt;strong&gt;PCollection&lt;/strong&gt;，该 PCollection 可以作为一个&lt;strong&gt;输入数据集&lt;/strong&gt;，应用在各种 &lt;strong&gt;Transform&lt;/strong&gt; 上&lt;/li&gt;
&lt;li&gt;Pipeline &lt;strong&gt;没有限制&lt;/strong&gt;调用 Read Transform 的&lt;strong&gt;时机&lt;/strong&gt;&lt;ul&gt;
&lt;li&gt;可以在 Pipeline 最开始的时候调用&lt;/li&gt;
&lt;li&gt;也可以在经过 N 个步骤的 Transforms 后再调用它来读取另外的数据集&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;</summary>
    
    
    
    <category term="Big Data" scheme="https://blog.zhongmingmao.top/categories/big-data/"/>
    
    <category term="Beam" scheme="https://blog.zhongmingmao.top/categories/big-data/beam/"/>
    
    
    <category term="Big Data" scheme="https://blog.zhongmingmao.top/tags/big-data/"/>
    
    <category term="Beam" scheme="https://blog.zhongmingmao.top/tags/beam/"/>
    
  </entry>
  
  <entry>
    <title>Beam - Pipeline</title>
    <link href="https://blog.zhongmingmao.top/2024/09/27/bigdata-beam-pipeline/"/>
    <id>https://blog.zhongmingmao.top/2024/09/27/bigdata-beam-pipeline/</id>
    <published>2024-09-26T16:06:25.000Z</published>
    <updated>2024-11-20T10:12:01.692Z</updated>
    
    
    <summary type="html">&lt;h1 id=&quot;创建&quot;&gt;&lt;a href=&quot;#创建&quot; class=&quot;headerlink&quot; title=&quot;创建&quot;&gt;&lt;/a&gt;创建&lt;/h1&gt;&lt;ol&gt;
&lt;li&gt;在 Beam 中，所有的&lt;strong&gt;数据处理逻辑&lt;/strong&gt;都会被抽象成 &lt;strong&gt;Pipeline&lt;/strong&gt; 来运行&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Pipeline&lt;/strong&gt; 是对&lt;strong&gt;数据处理逻辑&lt;/strong&gt;的一个&lt;strong&gt;封装&lt;/strong&gt;&lt;ul&gt;
&lt;li&gt;包括一整套流程 - &lt;strong&gt;读取&lt;/strong&gt;数据集、将数据集&lt;strong&gt;转换&lt;/strong&gt;成想要的结果、&lt;strong&gt;输出&lt;/strong&gt;结果数据集&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;</summary>
    
    
    
    <category term="Big Data" scheme="https://blog.zhongmingmao.top/categories/big-data/"/>
    
    <category term="Beam" scheme="https://blog.zhongmingmao.top/categories/big-data/beam/"/>
    
    
    <category term="Big Data" scheme="https://blog.zhongmingmao.top/tags/big-data/"/>
    
    <category term="Beam" scheme="https://blog.zhongmingmao.top/tags/beam/"/>
    
  </entry>
  
  <entry>
    <title>Beam - Transform</title>
    <link href="https://blog.zhongmingmao.top/2024/09/26/bigdata-beam-transform/"/>
    <id>https://blog.zhongmingmao.top/2024/09/26/bigdata-beam-transform/</id>
    <published>2024-09-25T16:06:25.000Z</published>
    <updated>2024-11-20T09:02:49.745Z</updated>
    
    
    <summary type="html">&lt;h1 id=&quot;DAG&quot;&gt;&lt;a href=&quot;#DAG&quot; class=&quot;headerlink&quot; title=&quot;DAG&quot;&gt;&lt;/a&gt;DAG&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt;Transform 是 Beam 中&lt;strong&gt;数据处理&lt;/strong&gt;的&lt;strong&gt;最基本单元&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img src=&quot;https://big-data-1253868755.cos.ap-guangzhou.myqcloud.com/image-20241120160357180.png&quot; alt=&quot;image-20241120160357180&quot;&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="Big Data" scheme="https://blog.zhongmingmao.top/categories/big-data/"/>
    
    <category term="Beam" scheme="https://blog.zhongmingmao.top/categories/big-data/beam/"/>
    
    
    <category term="Big Data" scheme="https://blog.zhongmingmao.top/tags/big-data/"/>
    
    <category term="Beam" scheme="https://blog.zhongmingmao.top/tags/beam/"/>
    
  </entry>
  
  <entry>
    <title>Beam - PCollection</title>
    <link href="https://blog.zhongmingmao.top/2024/09/25/bigdata-beam-pcollection/"/>
    <id>https://blog.zhongmingmao.top/2024/09/25/bigdata-beam-pcollection/</id>
    <published>2024-09-24T16:06:25.000Z</published>
    <updated>2024-11-20T07:43:30.786Z</updated>
    
    
    <summary type="html">&lt;h1 id=&quot;数据抽象&quot;&gt;&lt;a href=&quot;#数据抽象&quot; class=&quot;headerlink&quot; title=&quot;数据抽象&quot;&gt;&lt;/a&gt;数据抽象&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Spark RDD&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ol&gt;
&lt;li&gt;不同的技术系统有不同的&lt;strong&gt;数据结构&lt;/strong&gt;， 如在 C++  中有 vector、unordered_map&lt;/li&gt;
&lt;li&gt;几乎&lt;strong&gt;所有&lt;/strong&gt;的 Beam 数据都能表达为 PCollection&lt;/li&gt;
&lt;li&gt;PCollection - &lt;strong&gt;Parallel Collection&lt;/strong&gt; - 可&lt;strong&gt;并行计算&lt;/strong&gt;的数据集，与 Spark &lt;strong&gt;RDD&lt;/strong&gt; 非常类似&lt;/li&gt;
&lt;li&gt;在一个&lt;strong&gt;分布式计算系统&lt;/strong&gt;中，需要为用户隐藏实现细节，包括&lt;strong&gt;数据&lt;/strong&gt;是怎样&lt;strong&gt;表达&lt;/strong&gt;和&lt;strong&gt;存储&lt;/strong&gt;的&lt;ul&gt;
&lt;li&gt;数据可能来自于&lt;strong&gt;内存&lt;/strong&gt;的数据，也可能来自于&lt;strong&gt;外部文件&lt;/strong&gt;，或者来自于 &lt;strong&gt;MySQL&lt;/strong&gt; 数据库&lt;/li&gt;
&lt;li&gt;如果没有一个&lt;strong&gt;统一的数据抽象&lt;/strong&gt;的话，开发者需要不停地修改代码，无法专注于业务逻辑&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;</summary>
    
    
    
    <category term="Big Data" scheme="https://blog.zhongmingmao.top/categories/big-data/"/>
    
    <category term="Beam" scheme="https://blog.zhongmingmao.top/categories/big-data/beam/"/>
    
    
    <category term="Big Data" scheme="https://blog.zhongmingmao.top/tags/big-data/"/>
    
    <category term="Beam" scheme="https://blog.zhongmingmao.top/tags/beam/"/>
    
  </entry>
  
  <entry>
    <title>Beam - Paradigm</title>
    <link href="https://blog.zhongmingmao.top/2024/09/24/bigdata-beam-paradigm/"/>
    <id>https://blog.zhongmingmao.top/2024/09/24/bigdata-beam-paradigm/</id>
    <published>2024-09-23T16:06:25.000Z</published>
    <updated>2024-11-19T15:49:37.164Z</updated>
    
    
    <summary type="html">&lt;h1 id=&quot;Why&quot;&gt;&lt;a href=&quot;#Why&quot; class=&quot;headerlink&quot; title=&quot;Why&quot;&gt;&lt;/a&gt;Why&lt;/h1&gt;&lt;ol&gt;
&lt;li&gt;Apache Beam 本身并不是一个&lt;strong&gt;数据处理平台&lt;/strong&gt;，本身也无法对数据进行处理&lt;ul&gt;
&lt;li&gt;Apache Beam 所提供的是一个&lt;strong&gt;统一的编程模型&lt;/strong&gt;思想&lt;/li&gt;
&lt;li&gt;通过 Apache Beam 统一的 API 来编写处理逻辑，该处理逻辑会被转化为&lt;strong&gt;底层运行引擎相应的 API&lt;/strong&gt; 去运行&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;SDK 会变，但背后的&lt;strong&gt;设计原理&lt;/strong&gt;却不会改变&lt;/li&gt;
&lt;/ol&gt;</summary>
    
    
    
    <category term="Big Data" scheme="https://blog.zhongmingmao.top/categories/big-data/"/>
    
    <category term="Beam" scheme="https://blog.zhongmingmao.top/categories/big-data/beam/"/>
    
    
    <category term="Big Data" scheme="https://blog.zhongmingmao.top/tags/big-data/"/>
    
    <category term="Beam" scheme="https://blog.zhongmingmao.top/tags/beam/"/>
    
  </entry>
  
  <entry>
    <title>Beam - Context</title>
    <link href="https://blog.zhongmingmao.top/2024/09/23/bigdata-beam-context/"/>
    <id>https://blog.zhongmingmao.top/2024/09/23/bigdata-beam-context/</id>
    <published>2024-09-22T16:06:25.000Z</published>
    <updated>2024-11-19T03:44:52.539Z</updated>
    
    
    <summary type="html">&lt;h1 id=&quot;MapReduce&quot;&gt;&lt;a href=&quot;#MapReduce&quot; class=&quot;headerlink&quot; title=&quot;MapReduce&quot;&gt;&lt;/a&gt;MapReduce&lt;/h1&gt;&lt;h2 id=&quot;架构思想&quot;&gt;&lt;a href=&quot;#架构思想&quot; class=&quot;headerlink&quot; title=&quot;架构思想&quot;&gt;&lt;/a&gt;架构思想&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;提供一套&lt;strong&gt;简洁的 API&lt;/strong&gt; 来表达工程师&lt;strong&gt;数据处理&lt;/strong&gt;的逻辑&lt;/li&gt;
&lt;li&gt;在这套 API 底层嵌套一套&lt;strong&gt;扩展性很强&lt;/strong&gt;的&lt;strong&gt;容错系统&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;</summary>
    
    
    
    <category term="Big Data" scheme="https://blog.zhongmingmao.top/categories/big-data/"/>
    
    <category term="Beam" scheme="https://blog.zhongmingmao.top/categories/big-data/beam/"/>
    
    
    <category term="Big Data" scheme="https://blog.zhongmingmao.top/tags/big-data/"/>
    
    <category term="Beam" scheme="https://blog.zhongmingmao.top/tags/beam/"/>
    
  </entry>
  
</feed>
