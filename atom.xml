<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>ByteCoding</title>
  
  
  <link href="https://blog.zhongmingmao.top/atom.xml" rel="self"/>
  
  <link href="https://blog.zhongmingmao.top/"/>
  <updated>2024-11-01T13:56:49.758Z</updated>
  <id>https://blog.zhongmingmao.top/</id>
  
  <author>
    <name>zhongmingmao</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Python - GC</title>
    <link href="https://blog.zhongmingmao.top/2024/09/06/python-gc/"/>
    <id>https://blog.zhongmingmao.top/2024/09/06/python-gc/</id>
    <published>2024-09-05T16:06:25.000Z</published>
    <updated>2024-11-01T13:56:49.758Z</updated>
    
    
    <summary type="html">&lt;h1 id=&quot;计数引用&quot;&gt;&lt;a href=&quot;#计数引用&quot; class=&quot;headerlink&quot; title=&quot;计数引用&quot;&gt;&lt;/a&gt;计数引用&lt;/h1&gt;&lt;ol&gt;
&lt;li&gt;Python 中&lt;strong&gt;一切皆对象&lt;/strong&gt;，&lt;strong&gt;变量&lt;/strong&gt;的本质是&lt;strong&gt;对像的指针&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;当一个对象的&lt;strong&gt;引用计数&lt;/strong&gt;（指针数）为 &lt;strong&gt;0&lt;/strong&gt; 时，说明该对象&lt;strong&gt;不可达&lt;/strong&gt;，成为&lt;strong&gt;垃圾&lt;/strong&gt;，需要被&lt;strong&gt;回收&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;</summary>
    
    
    
    <category term="Python" scheme="https://blog.zhongmingmao.top/categories/python/"/>
    
    
    <category term="Python" scheme="https://blog.zhongmingmao.top/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>Python - GIL</title>
    <link href="https://blog.zhongmingmao.top/2024/09/05/python-gil/"/>
    <id>https://blog.zhongmingmao.top/2024/09/05/python-gil/</id>
    <published>2024-09-04T16:06:25.000Z</published>
    <updated>2024-11-01T14:12:19.565Z</updated>
    
    
    <summary type="html">&lt;h1 id=&quot;Cpu-bound&quot;&gt;&lt;a href=&quot;#Cpu-bound&quot; class=&quot;headerlink&quot; title=&quot;Cpu bound&quot;&gt;&lt;/a&gt;Cpu bound&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt;单线程 - 2.555494917&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; time&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title function_&quot;&gt;CountDown&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;n&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt; n &amp;gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        n -= &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;start = time.perf_counter()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;n = &lt;span class=&quot;number&quot;&gt;100_000_000&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;CountDown(n)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;end = time.perf_counter()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;print&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;f&amp;quot;Time elapsed: &lt;span class=&quot;subst&quot;&gt;&amp;#123;end - start&amp;#125;&lt;/span&gt; seconds&amp;quot;&lt;/span&gt;)  &lt;span class=&quot;comment&quot;&gt;# Time elapsed: 2.555494917 seconds&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</summary>
    
    
    
    <category term="Python" scheme="https://blog.zhongmingmao.top/categories/python/"/>
    
    
    <category term="Python" scheme="https://blog.zhongmingmao.top/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>Python - Async IO</title>
    <link href="https://blog.zhongmingmao.top/2024/09/04/python-asyncio/"/>
    <id>https://blog.zhongmingmao.top/2024/09/04/python-asyncio/</id>
    <published>2024-09-03T16:06:25.000Z</published>
    <updated>2024-11-01T14:21:41.156Z</updated>
    
    
    <summary type="html">&lt;h1 id=&quot;线程局限&quot;&gt;&lt;a href=&quot;#线程局限&quot; class=&quot;headerlink&quot; title=&quot;线程局限&quot;&gt;&lt;/a&gt;线程局限&lt;/h1&gt;&lt;ol&gt;
&lt;li&gt;多线程在运行过程中容易被&lt;strong&gt;打断&lt;/strong&gt;，有可能会出现 &lt;strong&gt;race condition&lt;/strong&gt; 的情况&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;线程切换&lt;/strong&gt;本身存在&lt;strong&gt;开销&lt;/strong&gt;，不能无限增加&lt;strong&gt;线程数&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;</summary>
    
    
    
    <category term="Python" scheme="https://blog.zhongmingmao.top/categories/python/"/>
    
    
    <category term="Python" scheme="https://blog.zhongmingmao.top/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>Python - Futures</title>
    <link href="https://blog.zhongmingmao.top/2024/09/03/python-futures/"/>
    <id>https://blog.zhongmingmao.top/2024/09/03/python-futures/</id>
    <published>2024-09-02T16:06:25.000Z</published>
    <updated>2024-11-01T07:00:13.556Z</updated>
    
    
    <summary type="html">&lt;h1 id=&quot;并行-vs-并发&quot;&gt;&lt;a href=&quot;#并行-vs-并发&quot; class=&quot;headerlink&quot; title=&quot;并行 vs 并发&quot;&gt;&lt;/a&gt;并行 vs 并发&lt;/h1&gt;&lt;ol&gt;
&lt;li&gt;并发（&lt;strong&gt;Concurrency&lt;/strong&gt;） - 在某个特定的时刻，只允许有一个操作发生，线程和任务之间会相互切换，&lt;strong&gt;交替运行&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;并行（&lt;strong&gt;Parallelism&lt;/strong&gt;） - 在&lt;strong&gt;同一时刻&lt;/strong&gt;，有多个操作&lt;strong&gt;同时进行&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Python 中有两种并发形式 - &lt;strong&gt;threading&lt;/strong&gt; + &lt;strong&gt;asyncio&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;</summary>
    
    
    
    <category term="Python" scheme="https://blog.zhongmingmao.top/categories/python/"/>
    
    
    <category term="Python" scheme="https://blog.zhongmingmao.top/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>Python - Coroutine</title>
    <link href="https://blog.zhongmingmao.top/2024/09/02/python-coroutine/"/>
    <id>https://blog.zhongmingmao.top/2024/09/02/python-coroutine/</id>
    <published>2024-09-01T16:06:25.000Z</published>
    <updated>2024-11-01T03:46:33.596Z</updated>
    
    
    <summary type="html">&lt;h1 id=&quot;基础&quot;&gt;&lt;a href=&quot;#基础&quot; class=&quot;headerlink&quot; title=&quot;基础&quot;&gt;&lt;/a&gt;基础&lt;/h1&gt;&lt;ol&gt;
&lt;li&gt;协程是实现&lt;strong&gt;并发编程&lt;/strong&gt;的一种方式&lt;/li&gt;
&lt;li&gt;多&lt;strong&gt;线程&lt;/strong&gt;&amp;#x2F;多&lt;strong&gt;进程&lt;/strong&gt;模型，是解决并发问题的经典模式&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;C10K&lt;/strong&gt; - 线程&amp;#x2F;进程上下文切换占用大量资源&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Nginx &lt;strong&gt;Event loop&lt;/strong&gt;&lt;ul&gt;
&lt;li&gt;启动一个&lt;strong&gt;统一&lt;/strong&gt;的调度器，让调度器来&lt;strong&gt;决定&lt;/strong&gt;一个时刻去运行哪个任务&lt;/li&gt;
&lt;li&gt;节省了多线程中&lt;strong&gt;启动线程&lt;/strong&gt;、&lt;strong&gt;管理线程&lt;/strong&gt;、&lt;strong&gt;同步锁&lt;/strong&gt;等各种开销&lt;/li&gt;
&lt;li&gt;相比于 Apache，用更低的资源支持更多的并发连接&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Callback hell&lt;/strong&gt; - JavaScript&lt;ul&gt;
&lt;li&gt;继承了 &lt;strong&gt;Event loop&lt;/strong&gt; 的优越性，同时还提供 &lt;strong&gt;async &amp;#x2F; await&lt;/strong&gt; 语法糖，解决了&lt;strong&gt;执行性&lt;/strong&gt;和&lt;strong&gt;可读性&lt;/strong&gt;共存的难题&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;协程&lt;/strong&gt;开始崭露头角，尝试使用 &lt;strong&gt;Node.js&lt;/strong&gt; 实现后端&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Python 3.7 提供基于 &lt;strong&gt;asyncio&lt;/strong&gt; 的 &lt;strong&gt;async &amp;#x2F; await&lt;/strong&gt; 方法&lt;/li&gt;
&lt;/ol&gt;</summary>
    
    
    
    <category term="Python" scheme="https://blog.zhongmingmao.top/categories/python/"/>
    
    
    <category term="Python" scheme="https://blog.zhongmingmao.top/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>Python - Iterator + Generator</title>
    <link href="https://blog.zhongmingmao.top/2024/09/01/python-iterator-generator/"/>
    <id>https://blog.zhongmingmao.top/2024/09/01/python-iterator-generator/</id>
    <published>2024-08-31T16:06:25.000Z</published>
    <updated>2024-10-31T15:05:02.362Z</updated>
    
    
    <summary type="html">&lt;h1 id=&quot;迭代器&quot;&gt;&lt;a href=&quot;#迭代器&quot; class=&quot;headerlink&quot; title=&quot;迭代器&quot;&gt;&lt;/a&gt;迭代器&lt;/h1&gt;&lt;ol&gt;
&lt;li&gt;Python 中一切皆对象，对象的抽象就是类，对象的&lt;strong&gt;集合&lt;/strong&gt;为&lt;strong&gt;容器&lt;/strong&gt;（列表、元组、字典、集合）&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;所有的容器&lt;/strong&gt;都是可迭代的（&lt;strong&gt;iterable&lt;/strong&gt;）&lt;/li&gt;
&lt;li&gt;迭代器（&lt;strong&gt;iterator&lt;/strong&gt;）提供了一个 &lt;strong&gt;next&lt;/strong&gt; 的方法&lt;ul&gt;
&lt;li&gt;得到容器的&lt;strong&gt;下一个对象&lt;/strong&gt;，或者得到一个 &lt;strong&gt;StopIteration&lt;/strong&gt; 的错误&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;可迭代对象&lt;/strong&gt;，通过 &lt;strong&gt;iter()&lt;/strong&gt; 函数返回一个迭代器（&lt;strong&gt;iterator&lt;/strong&gt;），再通过 &lt;strong&gt;next()&lt;/strong&gt; 函数实现遍历&lt;ul&gt;
&lt;li&gt;&lt;code&gt;for in&lt;/code&gt; 语句&lt;strong&gt;隐式化&lt;/strong&gt;了该&lt;strong&gt;迭代过程&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;</summary>
    
    
    
    <category term="Python" scheme="https://blog.zhongmingmao.top/categories/python/"/>
    
    
    <category term="Python" scheme="https://blog.zhongmingmao.top/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>Python - Metaclass</title>
    <link href="https://blog.zhongmingmao.top/2024/08/31/python-metaclass/"/>
    <id>https://blog.zhongmingmao.top/2024/08/31/python-metaclass/</id>
    <published>2024-08-30T16:06:25.000Z</published>
    <updated>2024-10-31T09:03:05.471Z</updated>
    
    
    <summary type="html">&lt;h1 id=&quot;超越变形&quot;&gt;&lt;a href=&quot;#超越变形&quot; class=&quot;headerlink&quot; title=&quot;超越变形&quot;&gt;&lt;/a&gt;超越变形&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt;YAMLObject 的一个&lt;strong&gt;超越变形&lt;/strong&gt;能力，即的&lt;strong&gt;任意子类&lt;/strong&gt;支持&lt;strong&gt;序列化&lt;/strong&gt;和&lt;strong&gt;反序列化&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; yaml&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title class_&quot;&gt;Monster&lt;/span&gt;(yaml.YAMLObject):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    yaml_tag = &lt;span class=&quot;string&quot;&gt;u&amp;#x27;!Monster&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title function_&quot;&gt;__init__&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;self, name, hp, ac, attacks&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self.name = name&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self.hp = hp&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self.ac = ac&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self.attacks = attacks&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title function_&quot;&gt;__repr__&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;self&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&amp;quot;%s(name=%r, hp=%r, ac=%r, attacks=%r)&amp;quot;&lt;/span&gt; % (&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            self.__class__.__name__, self.name, self.hp, self.ac,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            self.attacks)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;yaml.load(&lt;span class=&quot;string&quot;&gt;&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;--- !Monster&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;name: Cave spider&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;hp: [2,6]    # 2d6&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;ac: 16&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;attacks: [BITE, HURT]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Monster(name=&lt;span class=&quot;string&quot;&gt;&amp;#x27;Cave spider&amp;#x27;&lt;/span&gt;, hp=[&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;6&lt;/span&gt;], ac=&lt;span class=&quot;number&quot;&gt;16&lt;/span&gt;, attacks=[&lt;span class=&quot;string&quot;&gt;&amp;#x27;BITE&amp;#x27;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&amp;#x27;HURT&amp;#x27;&lt;/span&gt;])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;print&lt;/span&gt; yaml.dump(Monster(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    name=&lt;span class=&quot;string&quot;&gt;&amp;#x27;Cave lizard&amp;#x27;&lt;/span&gt;, hp=[&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;6&lt;/span&gt;], ac=&lt;span class=&quot;number&quot;&gt;16&lt;/span&gt;, attacks=[&lt;span class=&quot;string&quot;&gt;&amp;#x27;BITE&amp;#x27;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&amp;#x27;HURT&amp;#x27;&lt;/span&gt;]))&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</summary>
    
    
    
    <category term="Python" scheme="https://blog.zhongmingmao.top/categories/python/"/>
    
    
    <category term="Python" scheme="https://blog.zhongmingmao.top/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>Python - Decorator</title>
    <link href="https://blog.zhongmingmao.top/2024/08/30/python-decorator/"/>
    <id>https://blog.zhongmingmao.top/2024/08/30/python-decorator/</id>
    <published>2024-08-29T16:06:25.000Z</published>
    <updated>2024-10-31T06:22:40.395Z</updated>
    
    
    <summary type="html">&lt;h1 id=&quot;函数&quot;&gt;&lt;a href=&quot;#函数&quot; class=&quot;headerlink&quot; title=&quot;函数&quot;&gt;&lt;/a&gt;函数&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt;在 Python 中，&lt;strong&gt;函数&lt;/strong&gt;是&lt;strong&gt;一等公民&lt;/strong&gt;，函数是&lt;strong&gt;对象&lt;/strong&gt;，可以将函数赋予&lt;strong&gt;变量&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;将函数&lt;strong&gt;赋值给变量&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title function_&quot;&gt;func&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;message&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;print&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&amp;#x27;Got a message: &amp;#123;&amp;#125;&amp;#x27;&lt;/span&gt;.&lt;span class=&quot;built_in&quot;&gt;format&lt;/span&gt;(message))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;send_message = func  &lt;span class=&quot;comment&quot;&gt;# assign the function to a variable&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;print&lt;/span&gt;(&lt;span class=&quot;built_in&quot;&gt;type&lt;/span&gt;(func))  &lt;span class=&quot;comment&quot;&gt;# &amp;lt;class &amp;#x27;function&amp;#x27;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;print&lt;/span&gt;(&lt;span class=&quot;built_in&quot;&gt;type&lt;/span&gt;(send_message))  &lt;span class=&quot;comment&quot;&gt;# &amp;lt;class &amp;#x27;function&amp;#x27;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;send_message(&lt;span class=&quot;string&quot;&gt;&amp;#x27;hello world&amp;#x27;&lt;/span&gt;)  &lt;span class=&quot;comment&quot;&gt;# call the function&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</summary>
    
    
    
    <category term="Python" scheme="https://blog.zhongmingmao.top/categories/python/"/>
    
    
    <category term="Python" scheme="https://blog.zhongmingmao.top/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>Python - Parameter Passing</title>
    <link href="https://blog.zhongmingmao.top/2024/08/29/python-parameter-passing/"/>
    <id>https://blog.zhongmingmao.top/2024/08/29/python-parameter-passing/</id>
    <published>2024-08-28T16:06:25.000Z</published>
    <updated>2024-10-31T03:33:42.350Z</updated>
    
    
    <summary type="html">&lt;h1 id=&quot;值传递-vs-引用传递&quot;&gt;&lt;a href=&quot;#值传递-vs-引用传递&quot; class=&quot;headerlink&quot; title=&quot;值传递 vs 引用传递&quot;&gt;&lt;/a&gt;值传递 vs 引用传递&lt;/h1&gt;&lt;ol&gt;
&lt;li&gt;值传递 - 拷贝参数的值，然后传递给函数里面的新变量，原变量和新变量之间互相独立，互不影响&lt;/li&gt;
&lt;li&gt;引用传递 - 把参数的引用传递给新变量，原变量和新变量会指向&lt;strong&gt;同一块内存地址&lt;/strong&gt;&lt;ul&gt;
&lt;li&gt;如果改变其中任何一个变量的值，另一个变量的值也会随之变化&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;</summary>
    
    
    
    <category term="Python" scheme="https://blog.zhongmingmao.top/categories/python/"/>
    
    
    <category term="Python" scheme="https://blog.zhongmingmao.top/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>Python - Compare + Copy</title>
    <link href="https://blog.zhongmingmao.top/2024/08/28/python-compare-copy/"/>
    <id>https://blog.zhongmingmao.top/2024/08/28/python-compare-copy/</id>
    <published>2024-08-27T16:06:25.000Z</published>
    <updated>2024-10-30T17:47:45.161Z</updated>
    
    
    <summary type="html">&lt;h2 id=&quot;vs-is&quot;&gt;&lt;a href=&quot;#vs-is&quot; class=&quot;headerlink&quot; title=&quot;&amp;#x3D;&amp;#x3D; vs is&quot;&gt;&lt;/a&gt;&amp;#x3D;&amp;#x3D; vs is&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;&amp;#x3D;&amp;#x3D;&lt;/strong&gt; 比较对象之间的&lt;strong&gt;值&lt;/strong&gt;是否相等，类似于 Java 中的 &lt;strong&gt;equals&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;is&lt;/strong&gt; 比较的是对象的&lt;strong&gt;身份标识&lt;/strong&gt;是否相等，即是否为&lt;strong&gt;同一个对象&lt;/strong&gt;，是否&lt;strong&gt;指向同一个内存地址&lt;/strong&gt;，类似于 Java 中的 &lt;strong&gt;&amp;#x3D;&amp;#x3D;&lt;/strong&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;is None&lt;/strong&gt; or &lt;strong&gt;is not None&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;在 Python 中，每个对象的身份标识，都能通过 &lt;strong&gt;id(object)&lt;/strong&gt; 函数获得，&lt;strong&gt;is&lt;/strong&gt; 比较的是对象之间的 &lt;strong&gt;ID&lt;/strong&gt; 是否相等&lt;ul&gt;
&lt;li&gt;类似于 Java 对象的 &lt;strong&gt;HashCode&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;在实际工作中，**&amp;#x3D;&amp;#x3D; 更常用&lt;strong&gt;，一般关心的是两个变量的&lt;/strong&gt;值&lt;strong&gt;，而非&lt;/strong&gt;内部存储地址**&lt;/li&gt;
&lt;/ol&gt;</summary>
    
    
    
    <category term="Python" scheme="https://blog.zhongmingmao.top/categories/python/"/>
    
    
    <category term="Python" scheme="https://blog.zhongmingmao.top/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>Python - Module</title>
    <link href="https://blog.zhongmingmao.top/2024/08/27/python-module/"/>
    <id>https://blog.zhongmingmao.top/2024/08/27/python-module/</id>
    <published>2024-08-26T16:06:25.000Z</published>
    <updated>2024-10-30T16:11:14.445Z</updated>
    
    
    <summary type="html">&lt;h1 id=&quot;简单模块化&quot;&gt;&lt;a href=&quot;#简单模块化&quot; class=&quot;headerlink&quot; title=&quot;简单模块化&quot;&gt;&lt;/a&gt;简单模块化&lt;/h1&gt;&lt;ol&gt;
&lt;li&gt;把函数、类、常量拆分到&lt;strong&gt;不同的文件&lt;/strong&gt;，但放置在&lt;strong&gt;同一个文件夹&lt;/strong&gt;中&lt;/li&gt;
&lt;li&gt;使用 &lt;code&gt;from your_file import function_name, class_name&lt;/code&gt; 的方式进行调用&lt;/li&gt;
&lt;/ol&gt;</summary>
    
    
    
    <category term="Python" scheme="https://blog.zhongmingmao.top/categories/python/"/>
    
    
    <category term="Python" scheme="https://blog.zhongmingmao.top/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>Python - OOP</title>
    <link href="https://blog.zhongmingmao.top/2024/08/26/python-oop/"/>
    <id>https://blog.zhongmingmao.top/2024/08/26/python-oop/</id>
    <published>2024-08-25T16:06:25.000Z</published>
    <updated>2024-10-30T15:02:12.287Z</updated>
    
    
    <summary type="html">&lt;h1 id=&quot;命令式&quot;&gt;&lt;a href=&quot;#命令式&quot; class=&quot;headerlink&quot; title=&quot;命令式&quot;&gt;&lt;/a&gt;命令式&lt;/h1&gt;&lt;ol&gt;
&lt;li&gt;Python 的命令式语言是&lt;strong&gt;图灵完备&lt;/strong&gt;的 - 即理论上可以做到&lt;strong&gt;其它任何语言&lt;/strong&gt;能够做到的&lt;strong&gt;所有事情&lt;/strong&gt;&lt;ul&gt;
&lt;li&gt;仅依靠汇编语言的 MOV 指令，就能实现图灵完备编程&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;传统的命令式语言有着无数&lt;strong&gt;重复性代码&lt;/strong&gt;，虽然&lt;strong&gt;函数&lt;/strong&gt;的诞生减缓了许多重复性&lt;ul&gt;
&lt;li&gt;但只有函数是不够的，需要把&lt;strong&gt;更加抽象&lt;/strong&gt;的概念引入计算机才能&lt;strong&gt;缓解&lt;/strong&gt; – &lt;strong&gt;OOP&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;</summary>
    
    
    
    <category term="Python" scheme="https://blog.zhongmingmao.top/categories/python/"/>
    
    
    <category term="Python" scheme="https://blog.zhongmingmao.top/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>Python - Lambda</title>
    <link href="https://blog.zhongmingmao.top/2024/08/25/python-lambda/"/>
    <id>https://blog.zhongmingmao.top/2024/08/25/python-lambda/</id>
    <published>2024-08-24T16:06:25.000Z</published>
    <updated>2024-10-30T11:37:02.896Z</updated>
    
    
    <summary type="html">&lt;h1 id=&quot;基础&quot;&gt;&lt;a href=&quot;#基础&quot; class=&quot;headerlink&quot; title=&quot;基础&quot;&gt;&lt;/a&gt;基础&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;匿名函数&lt;/strong&gt;的关键字为 &lt;strong&gt;lambda&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;lambda&lt;/span&gt; argument1, argument2,... argumentN : expression&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;square = &lt;span class=&quot;keyword&quot;&gt;lambda&lt;/span&gt; x: x ** &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;print&lt;/span&gt;(&lt;span class=&quot;built_in&quot;&gt;type&lt;/span&gt;(square))  &lt;span class=&quot;comment&quot;&gt;# &amp;lt;class &amp;#x27;function&amp;#x27;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;print&lt;/span&gt;(square(&lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;))  &lt;span class=&quot;comment&quot;&gt;# 25&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</summary>
    
    
    
    <category term="Python" scheme="https://blog.zhongmingmao.top/categories/python/"/>
    
    
    <category term="Python" scheme="https://blog.zhongmingmao.top/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>Python - Function</title>
    <link href="https://blog.zhongmingmao.top/2024/08/24/python-function/"/>
    <id>https://blog.zhongmingmao.top/2024/08/24/python-function/</id>
    <published>2024-08-23T16:06:25.000Z</published>
    <updated>2024-10-30T16:28:06.984Z</updated>
    
    
    <summary type="html">&lt;h1 id=&quot;基础&quot;&gt;&lt;a href=&quot;#基础&quot; class=&quot;headerlink&quot; title=&quot;基础&quot;&gt;&lt;/a&gt;基础&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;函数&lt;/strong&gt;为实现了某一功能的&lt;strong&gt;代码片段&lt;/strong&gt;，可以&lt;strong&gt;重复利用&lt;/strong&gt;&lt;br&gt;函数可以返回调用结果（&lt;strong&gt;return&lt;/strong&gt; or &lt;strong&gt;yield&lt;/strong&gt;），也可以不返回&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title function_&quot;&gt;name&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;param1, param2, ..., paramN&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    statements&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt;/&lt;span class=&quot;keyword&quot;&gt;yield&lt;/span&gt; value &lt;span class=&quot;comment&quot;&gt;# optional&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</summary>
    
    
    
    <category term="Python" scheme="https://blog.zhongmingmao.top/categories/python/"/>
    
    
    <category term="Python" scheme="https://blog.zhongmingmao.top/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>Python - Exception</title>
    <link href="https://blog.zhongmingmao.top/2024/08/23/python-exception/"/>
    <id>https://blog.zhongmingmao.top/2024/08/23/python-exception/</id>
    <published>2024-08-22T16:06:25.000Z</published>
    <updated>2024-10-30T08:37:48.218Z</updated>
    
    
    <summary type="html">&lt;h1 id=&quot;错误-vs-异常&quot;&gt;&lt;a href=&quot;#错误-vs-异常&quot; class=&quot;headerlink&quot; title=&quot;错误 vs 异常&quot;&gt;&lt;/a&gt;错误 vs 异常&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;语法&lt;/strong&gt;错误，无法被识别与执行&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;name = &lt;span class=&quot;string&quot;&gt;&amp;#x27;x&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; name &lt;span class=&quot;keyword&quot;&gt;is&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;not&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;None&lt;/span&gt;  &lt;span class=&quot;comment&quot;&gt;# SyntaxError: invalid syntax&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;print&lt;/span&gt;(name)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</summary>
    
    
    
    <category term="Python" scheme="https://blog.zhongmingmao.top/categories/python/"/>
    
    
    <category term="Python" scheme="https://blog.zhongmingmao.top/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>Python - Condition + Loop</title>
    <link href="https://blog.zhongmingmao.top/2024/08/22/python-condition-loop/"/>
    <id>https://blog.zhongmingmao.top/2024/08/22/python-condition-loop/</id>
    <published>2024-08-21T16:06:25.000Z</published>
    <updated>2024-10-30T07:20:38.707Z</updated>
    
    
    <summary type="html">&lt;h1 id=&quot;条件&quot;&gt;&lt;a href=&quot;#条件&quot; class=&quot;headerlink&quot; title=&quot;条件&quot;&gt;&lt;/a&gt;条件&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt;不能在条件语句中加括号，&lt;strong&gt;必须&lt;/strong&gt;在条件末尾加上 &lt;strong&gt;:&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;x = &lt;span class=&quot;built_in&quot;&gt;int&lt;/span&gt;(&lt;span class=&quot;built_in&quot;&gt;input&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&amp;quot;Enter a number: &amp;quot;&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; x &amp;lt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    y = -x&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    y = x&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;print&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;f&amp;quot;The absolute value of &lt;span class=&quot;subst&quot;&gt;&amp;#123;x&amp;#125;&lt;/span&gt; is &lt;span class=&quot;subst&quot;&gt;&amp;#123;y&amp;#125;&lt;/span&gt;.&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</summary>
    
    
    
    <category term="Python" scheme="https://blog.zhongmingmao.top/categories/python/"/>
    
    
    <category term="Python" scheme="https://blog.zhongmingmao.top/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>Python - IO</title>
    <link href="https://blog.zhongmingmao.top/2024/08/21/python-io/"/>
    <id>https://blog.zhongmingmao.top/2024/08/21/python-io/</id>
    <published>2024-08-20T16:06:25.000Z</published>
    <updated>2024-10-30T03:44:05.598Z</updated>
    
    
    <summary type="html">&lt;h1 id=&quot;基础&quot;&gt;&lt;a href=&quot;#基础&quot; class=&quot;headerlink&quot; title=&quot;基础&quot;&gt;&lt;/a&gt;基础&lt;/h1&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;name = &lt;span class=&quot;built_in&quot;&gt;input&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&amp;#x27;your name:&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;gender = &lt;span class=&quot;built_in&quot;&gt;input&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&amp;#x27;you are a boy? (y/n)&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;welcome_str = &lt;span class=&quot;string&quot;&gt;&amp;#x27;Welcome to the matrix &amp;#123;prefix&amp;#125; &amp;#123;name&amp;#125;.&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;welcome_dic = &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&amp;#x27;prefix&amp;#x27;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&amp;#x27;Mr.&amp;#x27;&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; gender == &lt;span class=&quot;string&quot;&gt;&amp;#x27;y&amp;#x27;&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&amp;#x27;Mrs.&amp;#x27;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&amp;#x27;name&amp;#x27;&lt;/span&gt;: name&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;print&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&amp;#x27;authorizing...&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;print&lt;/span&gt;(welcome_str.&lt;span class=&quot;built_in&quot;&gt;format&lt;/span&gt;(**welcome_dic))&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</summary>
    
    
    
    <category term="Python" scheme="https://blog.zhongmingmao.top/categories/python/"/>
    
    
    <category term="Python" scheme="https://blog.zhongmingmao.top/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>Python - String</title>
    <link href="https://blog.zhongmingmao.top/2024/08/20/python-string/"/>
    <id>https://blog.zhongmingmao.top/2024/08/20/python-string/</id>
    <published>2024-08-19T16:06:25.000Z</published>
    <updated>2024-10-29T11:39:12.968Z</updated>
    
    
    <summary type="html">&lt;h1 id=&quot;基础&quot;&gt;&lt;a href=&quot;#基础&quot; class=&quot;headerlink&quot; title=&quot;基础&quot;&gt;&lt;/a&gt;基础&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt;字符串是由&lt;strong&gt;独立字符&lt;/strong&gt;组成的一个序列，通常包含在 &lt;code&gt;&amp;#39;...&amp;#39;&lt;/code&gt;、&lt;code&gt;&amp;quot;...&amp;quot;&lt;/code&gt;、&lt;code&gt;&amp;quot;&amp;quot;&amp;quot;...&amp;quot;&amp;quot;&amp;quot; &lt;/code&gt; 中&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;name = &lt;span class=&quot;string&quot;&gt;&amp;#x27;jason&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;city = &lt;span class=&quot;string&quot;&gt;&amp;quot;guangzhou&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;desc = &lt;span class=&quot;string&quot;&gt;&amp;quot;&amp;quot;&amp;quot;I&amp;#x27;m a software engineer&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</summary>
    
    
    
    <category term="Python" scheme="https://blog.zhongmingmao.top/categories/python/"/>
    
    
    <category term="Python" scheme="https://blog.zhongmingmao.top/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>Python - Dict + Set</title>
    <link href="https://blog.zhongmingmao.top/2024/08/19/python-dict-set/"/>
    <id>https://blog.zhongmingmao.top/2024/08/19/python-dict-set/</id>
    <published>2024-08-18T16:06:25.000Z</published>
    <updated>2024-10-29T10:18:41.333Z</updated>
    
    
    <summary type="html">&lt;h1 id=&quot;基础&quot;&gt;&lt;a href=&quot;#基础&quot; class=&quot;headerlink&quot; title=&quot;基础&quot;&gt;&lt;/a&gt;基础&lt;/h1&gt;&lt;ol&gt;
&lt;li&gt;字典是由 &lt;strong&gt;kv&lt;/strong&gt; 对组成的元素的集合，在 Python &lt;strong&gt;3.7+&lt;strong&gt;，字典被确定为&lt;/strong&gt;有序&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;相比于列表和元组，字典的&lt;strong&gt;性能更优&lt;/strong&gt;，对于&lt;strong&gt;查找&lt;/strong&gt;、&lt;strong&gt;添加&lt;/strong&gt;和&lt;strong&gt;删除&lt;/strong&gt;操作，时间复杂度为 &lt;strong&gt;O(1)&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;集合是一系列&lt;strong&gt;唯一无序&lt;/strong&gt;的元素组合&lt;/li&gt;
&lt;li&gt;字典和集合，无论是 &lt;strong&gt;Key&lt;/strong&gt; 还是 &lt;strong&gt;Value&lt;/strong&gt;，都可以是&lt;strong&gt;混合类型&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;</summary>
    
    
    
    <category term="Python" scheme="https://blog.zhongmingmao.top/categories/python/"/>
    
    
    <category term="Python" scheme="https://blog.zhongmingmao.top/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>Python - List + Tuple</title>
    <link href="https://blog.zhongmingmao.top/2024/08/18/python-list-tuple/"/>
    <id>https://blog.zhongmingmao.top/2024/08/18/python-list-tuple/</id>
    <published>2024-08-17T16:06:25.000Z</published>
    <updated>2024-10-30T16:23:32.651Z</updated>
    
    
    <summary type="html">&lt;h1 id=&quot;基础&quot;&gt;&lt;a href=&quot;#基础&quot; class=&quot;headerlink&quot; title=&quot;基础&quot;&gt;&lt;/a&gt;基础&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt;列表和元组都是可以放置&lt;strong&gt;任意数据类型&lt;/strong&gt;的&lt;strong&gt;有序集合&lt;/strong&gt; - 绝大多数编程语言，集合的数据类型必须&lt;strong&gt;一致&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;l = [&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&amp;#x27;hello&amp;#x27;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&amp;#x27;world&amp;#x27;&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;t = (&lt;span class=&quot;string&quot;&gt;&amp;#x27;json&amp;#x27;&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;22&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</summary>
    
    
    
    <category term="Python" scheme="https://blog.zhongmingmao.top/categories/python/"/>
    
    
    <category term="Python" scheme="https://blog.zhongmingmao.top/tags/python/"/>
    
  </entry>
  
</feed>
