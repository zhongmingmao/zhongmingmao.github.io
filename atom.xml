<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>ByteCoding</title>
  
  
  <link href="https://blog.zhongmingmao.top/atom.xml" rel="self"/>
  
  <link href="https://blog.zhongmingmao.top/"/>
  <updated>2025-08-06T12:04:47.507Z</updated>
  <id>https://blog.zhongmingmao.top/</id>
  
  <author>
    <name>zhongmingmao</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>New Java Feature - Flow</title>
    <link href="https://blog.zhongmingmao.top/2025/01/15/new-java-feature-flow/"/>
    <id>https://blog.zhongmingmao.top/2025/01/15/new-java-feature-flow/</id>
    <published>2025-01-14T16:06:25.000Z</published>
    <updated>2025-08-06T12:04:47.507Z</updated>
    
    
    <summary type="html">&lt;h1 id=&quot;指令式编程&quot;&gt;&lt;a href=&quot;#指令式编程&quot; class=&quot;headerlink&quot; title=&quot;指令式编程&quot;&gt;&lt;/a&gt;指令式编程&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt;最常用的&lt;strong&gt;代码控制&lt;/strong&gt;模式&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;System.out.println(&lt;span class=&quot;string&quot;&gt;&amp;quot;Hello, World!&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;通过代码发布指令&lt;/strong&gt;，然后等待指令的&lt;strong&gt;执行&lt;/strong&gt;以及指令执行带来的&lt;strong&gt;状态变化&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;并且根据目前的状态，来确定&lt;strong&gt;下一次&lt;/strong&gt;要发布的指令，并且用&lt;strong&gt;代码&lt;/strong&gt;把&lt;strong&gt;下一个指令&lt;/strong&gt;表示出来&lt;/li&gt;
&lt;/ol&gt;</summary>
    
    
    
    <category term="Java" scheme="https://blog.zhongmingmao.top/categories/java/"/>
    
    <category term="Feature" scheme="https://blog.zhongmingmao.top/categories/java/feature/"/>
    
    
    <category term="Java" scheme="https://blog.zhongmingmao.top/tags/java/"/>
    
    <category term="Java Feature" scheme="https://blog.zhongmingmao.top/tags/java-feature/"/>
    
  </entry>
  
  <entry>
    <title>New Java Feature - Error Code</title>
    <link href="https://blog.zhongmingmao.top/2025/01/14/new-java-feature-error-code/"/>
    <id>https://blog.zhongmingmao.top/2025/01/14/new-java-feature-error-code/</id>
    <published>2025-01-13T16:06:25.000Z</published>
    <updated>2025-08-05T09:56:11.020Z</updated>
    
    
    <summary type="html">&lt;h1 id=&quot;概述&quot;&gt;&lt;a href=&quot;#概述&quot; class=&quot;headerlink&quot; title=&quot;概述&quot;&gt;&lt;/a&gt;概述&lt;/h1&gt;&lt;ol&gt;
&lt;li&gt;Java 的&lt;strong&gt;异常处理&lt;/strong&gt;是对&lt;strong&gt;代码性能&lt;/strong&gt;有着重要影响的因素&lt;/li&gt;
&lt;li&gt;Java 的异常处理，有着&lt;strong&gt;天生优势&lt;/strong&gt;，特别是在&lt;strong&gt;错误排查&lt;/strong&gt;方面的作用，很难找到合适的&lt;strong&gt;替代方案&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;</summary>
    
    
    
    <category term="Java" scheme="https://blog.zhongmingmao.top/categories/java/"/>
    
    <category term="Feature" scheme="https://blog.zhongmingmao.top/categories/java/feature/"/>
    
    
    <category term="Java" scheme="https://blog.zhongmingmao.top/tags/java/"/>
    
    <category term="Java Feature" scheme="https://blog.zhongmingmao.top/tags/java-feature/"/>
    
  </entry>
  
  <entry>
    <title>New Java Feature - Exception</title>
    <link href="https://blog.zhongmingmao.top/2025/01/13/new-java-feature-exception/"/>
    <id>https://blog.zhongmingmao.top/2025/01/13/new-java-feature-exception/</id>
    <published>2025-01-12T16:06:25.000Z</published>
    <updated>2025-08-05T07:36:02.976Z</updated>
    
    
    <summary type="html">&lt;h1 id=&quot;概述&quot;&gt;&lt;a href=&quot;#概述&quot; class=&quot;headerlink&quot; title=&quot;概述&quot;&gt;&lt;/a&gt;概述&lt;/h1&gt;&lt;ol&gt;
&lt;li&gt;Java 异常的使用和处理，是&lt;strong&gt;滥用&lt;/strong&gt;最严重，诟病最多，也是最难平衡的一个难题&lt;/li&gt;
&lt;li&gt;Java 语言支持三种异常的状况&lt;ul&gt;
&lt;li&gt;非正常异常（&lt;strong&gt;Error&lt;/strong&gt;）、运行时异常（&lt;strong&gt;Runtime Exception&lt;/strong&gt;）、检查型异常（&lt;strong&gt;Checked Exception&lt;/strong&gt;）&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;异常&lt;/strong&gt;，除非特别声明，一般指的是 &lt;strong&gt;Checked Exception&lt;/strong&gt; 和 &lt;strong&gt;Checked Exception&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;异常状况的处理&lt;/strong&gt;会让代码的&lt;strong&gt;效率&lt;/strong&gt;变低 - 不应该使用&lt;strong&gt;异常机制&lt;/strong&gt;来处理&lt;strong&gt;正常情况&lt;/strong&gt;&lt;ul&gt;
&lt;li&gt;理想情况下，在执行代码时&lt;strong&gt;没有任何异常发生&lt;/strong&gt;，否则业务执行的&lt;strong&gt;效率&lt;/strong&gt;会&lt;strong&gt;大打折扣&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;几乎无法完成，不管是 JDK 核心类库还是业务代码，都存在大量的&lt;strong&gt;异常处理&lt;/strong&gt;代码&lt;ul&gt;
&lt;li&gt;软件都是由很多&lt;strong&gt;类库&lt;/strong&gt;集成的，大部分类库，都只是从自身的角度去考虑问题，使用&lt;strong&gt;异常&lt;/strong&gt;来处理问题&lt;/li&gt;
&lt;li&gt;很难期望业务执行下来没有任何异常发生&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;抛出异常&lt;/strong&gt;影响了代码的&lt;strong&gt;运行效率&lt;/strong&gt;，而实际业务又没有办法&lt;strong&gt;完全不抛出&lt;/strong&gt;异常&lt;ul&gt;
&lt;li&gt;新的编程语言（&lt;strong&gt;Go&lt;/strong&gt;），&lt;strong&gt;彻底抛弃&lt;/strong&gt;类似于 Java 这样的异常机制，重新拥抱 &lt;strong&gt;C&lt;/strong&gt; 语言的错误方式&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;</summary>
    
    
    
    <category term="Java" scheme="https://blog.zhongmingmao.top/categories/java/"/>
    
    <category term="Feature" scheme="https://blog.zhongmingmao.top/categories/java/feature/"/>
    
    
    <category term="Java" scheme="https://blog.zhongmingmao.top/tags/java/"/>
    
    <category term="Java Feature" scheme="https://blog.zhongmingmao.top/tags/java-feature/"/>
    
  </entry>
  
  <entry>
    <title>New Java Feature - Switch Matching</title>
    <link href="https://blog.zhongmingmao.top/2025/01/12/new-java-feature-switch-matching/"/>
    <id>https://blog.zhongmingmao.top/2025/01/12/new-java-feature-switch-matching/</id>
    <published>2025-01-11T16:06:25.000Z</published>
    <updated>2025-08-04T11:14:33.084Z</updated>
    
    
    <summary type="html">&lt;h1 id=&quot;案例&quot;&gt;&lt;a href=&quot;#案例&quot; class=&quot;headerlink&quot; title=&quot;案例&quot;&gt;&lt;/a&gt;案例&lt;/h1&gt;&lt;p&gt;&lt;img src=&quot;https://java-feature-1253868755.cos.ap-guangzhou.myqcloud.com/image-20250804151527738.png&quot; alt=&quot;image-20250804151527738&quot;&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="Java" scheme="https://blog.zhongmingmao.top/categories/java/"/>
    
    <category term="Feature" scheme="https://blog.zhongmingmao.top/categories/java/feature/"/>
    
    
    <category term="Java" scheme="https://blog.zhongmingmao.top/tags/java/"/>
    
    <category term="Java Feature" scheme="https://blog.zhongmingmao.top/tags/java-feature/"/>
    
  </entry>
  
  <entry>
    <title>New Java Feature - Switch Expression</title>
    <link href="https://blog.zhongmingmao.top/2025/01/11/new-java-feature-switch-expression/"/>
    <id>https://blog.zhongmingmao.top/2025/01/11/new-java-feature-switch-expression/</id>
    <published>2025-01-10T16:06:25.000Z</published>
    <updated>2025-08-04T06:54:26.010Z</updated>
    
    
    <summary type="html">&lt;h1 id=&quot;概述&quot;&gt;&lt;a href=&quot;#概述&quot; class=&quot;headerlink&quot; title=&quot;概述&quot;&gt;&lt;/a&gt;概述&lt;/h1&gt;&lt;ol&gt;
&lt;li&gt;JDK 14&lt;/li&gt;
&lt;li&gt;在 Java 规范里，&lt;strong&gt;表达式&lt;/strong&gt;完成&lt;strong&gt;对数据的操作&lt;/strong&gt;&lt;ul&gt;
&lt;li&gt;一个表达式的结果可以是一个数值（i * 4）；或者是一个变量（i &amp;#x3D; 4）；或者什么都不是（void 类型）&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Java 语句是 Java 最基本的&lt;strong&gt;可执行单元&lt;/strong&gt;&lt;ul&gt;
&lt;li&gt;它本身不是一个数值，也不是一个变量&lt;/li&gt;
&lt;li&gt;Java 语句的标志性符号是&lt;strong&gt;分号&lt;/strong&gt;（&lt;strong&gt;代码&lt;/strong&gt;）和&lt;strong&gt;大括号&lt;/strong&gt;（&lt;strong&gt;代码块&lt;/strong&gt;） - if-else 语句、赋值语句等&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;switch 表达式是一个表达式，而 switch 语句是一个语句&lt;/li&gt;
&lt;/ol&gt;</summary>
    
    
    
    <category term="Java" scheme="https://blog.zhongmingmao.top/categories/java/"/>
    
    <category term="Feature" scheme="https://blog.zhongmingmao.top/categories/java/feature/"/>
    
    
    <category term="Java" scheme="https://blog.zhongmingmao.top/tags/java/"/>
    
    <category term="Java Feature" scheme="https://blog.zhongmingmao.top/tags/java-feature/"/>
    
  </entry>
  
  <entry>
    <title>New Java Feature - Pattern Matching</title>
    <link href="https://blog.zhongmingmao.top/2025/01/10/new-java-feature-pattern-matching/"/>
    <id>https://blog.zhongmingmao.top/2025/01/10/new-java-feature-pattern-matching/</id>
    <published>2025-01-09T16:06:25.000Z</published>
    <updated>2025-08-03T16:28:09.101Z</updated>
    
    
    <summary type="html">&lt;h1 id=&quot;概述&quot;&gt;&lt;a href=&quot;#概述&quot; class=&quot;headerlink&quot; title=&quot;概述&quot;&gt;&lt;/a&gt;概述&lt;/h1&gt;&lt;ol&gt;
&lt;li&gt;Java &lt;strong&gt;模式匹配&lt;/strong&gt;是一个&lt;strong&gt;新型&lt;/strong&gt;的、而且还在&lt;strong&gt;持续快速演进&lt;/strong&gt;的领域&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;类型匹配&lt;/strong&gt;是&lt;strong&gt;模式匹配&lt;/strong&gt;的一个&lt;strong&gt;规范&lt;/strong&gt;，在 &lt;strong&gt;JDK 16&lt;/strong&gt; 正式发布&lt;/li&gt;
&lt;li&gt;一个模式是&lt;strong&gt;匹配谓词&lt;/strong&gt;和&lt;strong&gt;匹配变量&lt;/strong&gt;的组合&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;匹配谓词&lt;/strong&gt;用来确定&lt;strong&gt;模式&lt;/strong&gt;和&lt;strong&gt;目标&lt;/strong&gt;是否&lt;strong&gt;匹配&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;在模式和目标&lt;strong&gt;匹配&lt;/strong&gt;的情况下，&lt;strong&gt;匹配变量&lt;/strong&gt;是从&lt;strong&gt;匹配目标&lt;/strong&gt;里&lt;strong&gt;提取&lt;/strong&gt;出来的&lt;strong&gt;一个或者多个变量&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;对于&lt;strong&gt;类型匹配&lt;/strong&gt;来说，&lt;strong&gt;匹配谓词&lt;/strong&gt;用来&lt;strong&gt;指定模式&lt;/strong&gt;的&lt;strong&gt;数据类型&lt;/strong&gt;，而&lt;strong&gt;匹配变量&lt;/strong&gt;就是&lt;strong&gt;属于该类型&lt;/strong&gt;的&lt;strong&gt;数据变量&lt;/strong&gt;&lt;ul&gt;
&lt;li&gt;对于&lt;strong&gt;类型匹配&lt;/strong&gt;来说，&lt;strong&gt;匹配变量只有一个&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;</summary>
    
    
    
    <category term="Java" scheme="https://blog.zhongmingmao.top/categories/java/"/>
    
    <category term="Feature" scheme="https://blog.zhongmingmao.top/categories/java/feature/"/>
    
    
    <category term="Java" scheme="https://blog.zhongmingmao.top/tags/java/"/>
    
    <category term="Java Feature" scheme="https://blog.zhongmingmao.top/tags/java-feature/"/>
    
  </entry>
  
  <entry>
    <title>New Java Feature - Sealed</title>
    <link href="https://blog.zhongmingmao.top/2025/01/09/new-java-feature-sealed/"/>
    <id>https://blog.zhongmingmao.top/2025/01/09/new-java-feature-sealed/</id>
    <published>2025-01-08T16:06:25.000Z</published>
    <updated>2025-08-03T15:05:26.291Z</updated>
    
    
    <summary type="html">&lt;h1 id=&quot;无法穷举&quot;&gt;&lt;a href=&quot;#无法穷举&quot; class=&quot;headerlink&quot; title=&quot;无法穷举&quot;&gt;&lt;/a&gt;无法穷举&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt;判断一个形状是不是正方形&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img src=&quot;https://java-feature-1253868755.cos.ap-guangzhou.myqcloud.com/image-20250803175034811.png&quot; alt=&quot;image-20250803175034811&quot;&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="Java" scheme="https://blog.zhongmingmao.top/categories/java/"/>
    
    <category term="Feature" scheme="https://blog.zhongmingmao.top/categories/java/feature/"/>
    
    
    <category term="Java" scheme="https://blog.zhongmingmao.top/tags/java/"/>
    
    <category term="Java Feature" scheme="https://blog.zhongmingmao.top/tags/java-feature/"/>
    
  </entry>
  
  <entry>
    <title>New Java Feature - Record</title>
    <link href="https://blog.zhongmingmao.top/2025/01/08/new-java-feature-record/"/>
    <id>https://blog.zhongmingmao.top/2025/01/08/new-java-feature-record/</id>
    <published>2025-01-07T16:06:25.000Z</published>
    <updated>2025-08-03T09:30:32.882Z</updated>
    
    
    <summary type="html">&lt;h1 id=&quot;概述&quot;&gt;&lt;a href=&quot;#概述&quot; class=&quot;headerlink&quot; title=&quot;概述&quot;&gt;&lt;/a&gt;概述&lt;/h1&gt;&lt;ol&gt;
&lt;li&gt;JDK 16&lt;/li&gt;
&lt;li&gt;Java 档案类是用来表示&lt;strong&gt;不可变数据&lt;/strong&gt;的&lt;strong&gt;透明载体&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;</summary>
    
    
    
    <category term="Java" scheme="https://blog.zhongmingmao.top/categories/java/"/>
    
    <category term="Feature" scheme="https://blog.zhongmingmao.top/categories/java/feature/"/>
    
    
    <category term="Java" scheme="https://blog.zhongmingmao.top/tags/java/"/>
    
    <category term="Java Feature" scheme="https://blog.zhongmingmao.top/tags/java-feature/"/>
    
  </entry>
  
  <entry>
    <title>New Java Feature - Text Blocks</title>
    <link href="https://blog.zhongmingmao.top/2025/01/07/new-java-feature-text-blocks/"/>
    <id>https://blog.zhongmingmao.top/2025/01/07/new-java-feature-text-blocks/</id>
    <published>2025-01-06T16:06:25.000Z</published>
    <updated>2025-08-02T09:39:22.488Z</updated>
    
    
    <summary type="html">&lt;h1 id=&quot;概述&quot;&gt;&lt;a href=&quot;#概述&quot; class=&quot;headerlink&quot; title=&quot;概述&quot;&gt;&lt;/a&gt;概述&lt;/h1&gt;&lt;ol&gt;
&lt;li&gt;JDK 15&lt;/li&gt;
&lt;li&gt;文字块 - 一个由&lt;strong&gt;多行文字&lt;/strong&gt;构成的字符串&lt;/li&gt;
&lt;/ol&gt;</summary>
    
    
    
    <category term="Java" scheme="https://blog.zhongmingmao.top/categories/java/"/>
    
    <category term="Feature" scheme="https://blog.zhongmingmao.top/categories/java/feature/"/>
    
    
    <category term="Java" scheme="https://blog.zhongmingmao.top/tags/java/"/>
    
    <category term="Java Feature" scheme="https://blog.zhongmingmao.top/tags/java-feature/"/>
    
  </entry>
  
  <entry>
    <title>New Java Feature - JShell</title>
    <link href="https://blog.zhongmingmao.top/2025/01/06/new-java-feature-jshell/"/>
    <id>https://blog.zhongmingmao.top/2025/01/06/new-java-feature-jshell/</id>
    <published>2025-01-05T16:06:25.000Z</published>
    <updated>2025-08-02T07:31:34.434Z</updated>
    
    
    <summary type="html">&lt;h1 id=&quot;概述&quot;&gt;&lt;a href=&quot;#概述&quot; class=&quot;headerlink&quot; title=&quot;概述&quot;&gt;&lt;/a&gt;概述&lt;/h1&gt;&lt;ol&gt;
&lt;li&gt;JDK 9&lt;/li&gt;
&lt;li&gt;JShell 是 Java 的&lt;strong&gt;交互式&lt;/strong&gt;编程环境&lt;/li&gt;
&lt;li&gt;JShell API 和工具提供了一种在 JShell 状态下评估 Java 编程语言的&lt;strong&gt;声明&lt;/strong&gt;、&lt;strong&gt;语句&lt;/strong&gt;和&lt;strong&gt;表达式&lt;/strong&gt;的方式&lt;/li&gt;
&lt;li&gt;JShell 的状态包括不断发展的&lt;strong&gt;代码&lt;/strong&gt;和&lt;strong&gt;执行状态&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;为了便于快速调查和编码&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;语句&lt;/strong&gt;和&lt;strong&gt;表达式&lt;/strong&gt;不需要出现在&lt;strong&gt;方法&lt;/strong&gt;中&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;变量&lt;/strong&gt;和&lt;strong&gt;方法&lt;/strong&gt;也不需要出现在&lt;strong&gt;类&lt;/strong&gt;中&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;</summary>
    
    
    
    <category term="Java" scheme="https://blog.zhongmingmao.top/categories/java/"/>
    
    <category term="Feature" scheme="https://blog.zhongmingmao.top/categories/java/feature/"/>
    
    
    <category term="Java" scheme="https://blog.zhongmingmao.top/tags/java/"/>
    
    <category term="Java Feature" scheme="https://blog.zhongmingmao.top/tags/java-feature/"/>
    
  </entry>
  
  <entry>
    <title>Observability - OpenTelemetry Python</title>
    <link href="https://blog.zhongmingmao.top/2025/01/05/cloud-native-observability-opentelemetry-python/"/>
    <id>https://blog.zhongmingmao.top/2025/01/05/cloud-native-observability-opentelemetry-python/</id>
    <published>2025-01-04T16:06:25.000Z</published>
    <updated>2025-07-31T15:54:52.386Z</updated>
    
    
    <summary type="html">&lt;h1 id=&quot;Overview&quot;&gt;&lt;a href=&quot;#Overview&quot; class=&quot;headerlink&quot; title=&quot;Overview&quot;&gt;&lt;/a&gt;Overview&lt;/h1&gt;&lt;h2 id=&quot;Status-and-Releases&quot;&gt;&lt;a href=&quot;#Status-and-Releases&quot; class=&quot;headerlink&quot; title=&quot;Status and Releases&quot;&gt;&lt;/a&gt;Status and Releases&lt;/h2&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Traces&lt;/th&gt;
&lt;th&gt;Metrics&lt;/th&gt;
&lt;th&gt;Logs&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td&gt;Stable&lt;/td&gt;
&lt;td&gt;Stable&lt;/td&gt;
&lt;td&gt;Development&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;h2 id=&quot;Version-support&quot;&gt;&lt;a href=&quot;#Version-support&quot; class=&quot;headerlink&quot; title=&quot;Version support&quot;&gt;&lt;/a&gt;Version support&lt;/h2&gt;&lt;p&gt;OpenTelemetry-Python supports Python &lt;strong&gt;3.9&lt;/strong&gt; and higher.&lt;/p&gt;</summary>
    
    
    
    <category term="Cloud Native" scheme="https://blog.zhongmingmao.top/categories/cloud-native/"/>
    
    <category term="Observability" scheme="https://blog.zhongmingmao.top/categories/cloud-native/observability/"/>
    
    
    <category term="Cloud Native" scheme="https://blog.zhongmingmao.top/tags/cloud-native/"/>
    
    <category term="Observability" scheme="https://blog.zhongmingmao.top/tags/observability/"/>
    
    <category term="OpenTelemetry" scheme="https://blog.zhongmingmao.top/tags/opentelemetry/"/>
    
  </entry>
  
  <entry>
    <title>Observability - OpenTelemetry Go</title>
    <link href="https://blog.zhongmingmao.top/2025/01/04/cloud-native-observability-opentelemetry-go/"/>
    <id>https://blog.zhongmingmao.top/2025/01/04/cloud-native-observability-opentelemetry-go/</id>
    <published>2025-01-03T16:06:25.000Z</published>
    <updated>2025-07-27T08:37:01.904Z</updated>
    
    
    <summary type="html">&lt;h1 id=&quot;Overview&quot;&gt;&lt;a href=&quot;#Overview&quot; class=&quot;headerlink&quot; title=&quot;Overview&quot;&gt;&lt;/a&gt;Overview&lt;/h1&gt;&lt;h2 id=&quot;Status-and-Releases&quot;&gt;&lt;a href=&quot;#Status-and-Releases&quot; class=&quot;headerlink&quot; title=&quot;Status and Releases&quot;&gt;&lt;/a&gt;Status and Releases&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;The logs signal is still &lt;strong&gt;experimental&lt;/strong&gt;. Breaking changes may be introduced in future versions.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Traces&lt;/th&gt;
&lt;th&gt;Metrics&lt;/th&gt;
&lt;th&gt;Logs&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td&gt;Stable&lt;/td&gt;
&lt;td&gt;Stable&lt;/td&gt;
&lt;td&gt;Beta&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;</summary>
    
    
    
    <category term="Cloud Native" scheme="https://blog.zhongmingmao.top/categories/cloud-native/"/>
    
    <category term="Observability" scheme="https://blog.zhongmingmao.top/categories/cloud-native/observability/"/>
    
    
    <category term="Cloud Native" scheme="https://blog.zhongmingmao.top/tags/cloud-native/"/>
    
    <category term="Observability" scheme="https://blog.zhongmingmao.top/tags/observability/"/>
    
    <category term="OpenTelemetry" scheme="https://blog.zhongmingmao.top/tags/opentelemetry/"/>
    
  </entry>
  
  <entry>
    <title>Observability - OpenTelemetry Node.js</title>
    <link href="https://blog.zhongmingmao.top/2025/01/03/cloud-native-observability-opentelemetry-js/"/>
    <id>https://blog.zhongmingmao.top/2025/01/03/cloud-native-observability-opentelemetry-js/</id>
    <published>2025-01-02T16:06:25.000Z</published>
    <updated>2025-07-20T12:14:09.107Z</updated>
    
    
    <summary type="html">&lt;h1 id=&quot;Overview&quot;&gt;&lt;a href=&quot;#Overview&quot; class=&quot;headerlink&quot; title=&quot;Overview&quot;&gt;&lt;/a&gt;Overview&lt;/h1&gt;&lt;h2 id=&quot;Status-and-Releases&quot;&gt;&lt;a href=&quot;#Status-and-Releases&quot; class=&quot;headerlink&quot; title=&quot;Status and Releases&quot;&gt;&lt;/a&gt;Status and Releases&lt;/h2&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Traces&lt;/th&gt;
&lt;th&gt;Metrics&lt;/th&gt;
&lt;th&gt;Logs&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td&gt;Stable&lt;/td&gt;
&lt;td&gt;Stable&lt;/td&gt;
&lt;td&gt;Development&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Client instrumentation&lt;/strong&gt; for the &lt;strong&gt;browser&lt;/strong&gt; is &lt;strong&gt;experimental&lt;/strong&gt; and mostly &lt;strong&gt;unspecified&lt;/strong&gt;.&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="Cloud Native" scheme="https://blog.zhongmingmao.top/categories/cloud-native/"/>
    
    <category term="Observability" scheme="https://blog.zhongmingmao.top/categories/cloud-native/observability/"/>
    
    
    <category term="Cloud Native" scheme="https://blog.zhongmingmao.top/tags/cloud-native/"/>
    
    <category term="Observability" scheme="https://blog.zhongmingmao.top/tags/observability/"/>
    
    <category term="OpenTelemetry" scheme="https://blog.zhongmingmao.top/tags/opentelemetry/"/>
    
  </entry>
  
  <entry>
    <title>Observability - OpenTelemetry Doc V2</title>
    <link href="https://blog.zhongmingmao.top/2025/01/02/cloud-native-observability-opentelemetry-doc-v2/"/>
    <id>https://blog.zhongmingmao.top/2025/01/02/cloud-native-observability-opentelemetry-doc-v2/</id>
    <published>2025-01-01T16:06:25.000Z</published>
    <updated>2025-07-20T06:10:30.174Z</updated>
    
    
    <summary type="html">&lt;h1 id=&quot;Language-APIs-SDKs&quot;&gt;&lt;a href=&quot;#Language-APIs-SDKs&quot; class=&quot;headerlink&quot; title=&quot;Language APIs &amp;amp; SDKs&quot;&gt;&lt;/a&gt;Language APIs &amp;amp; SDKs&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt;OpenTelemetry code instrumentation is supported for many popular programming languages&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="Cloud Native" scheme="https://blog.zhongmingmao.top/categories/cloud-native/"/>
    
    <category term="Observability" scheme="https://blog.zhongmingmao.top/categories/cloud-native/observability/"/>
    
    
    <category term="Cloud Native" scheme="https://blog.zhongmingmao.top/tags/cloud-native/"/>
    
    <category term="Observability" scheme="https://blog.zhongmingmao.top/tags/observability/"/>
    
    <category term="OpenTelemetry" scheme="https://blog.zhongmingmao.top/tags/opentelemetry/"/>
    
  </entry>
  
  <entry>
    <title>Observability - OpenTelemetry Doc V1</title>
    <link href="https://blog.zhongmingmao.top/2025/01/01/cloud-native-observability-opentelemetry-doc-v1/"/>
    <id>https://blog.zhongmingmao.top/2025/01/01/cloud-native-observability-opentelemetry-doc-v1/</id>
    <published>2024-12-31T16:06:25.000Z</published>
    <updated>2025-02-17T11:01:20.469Z</updated>
    
    
    <summary type="html">&lt;h1 id=&quot;架构&quot;&gt;&lt;a href=&quot;#架构&quot; class=&quot;headerlink&quot; title=&quot;架构&quot;&gt;&lt;/a&gt;架构&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt;OpenTelemetry 也被称为 &lt;strong&gt;OTel&lt;/strong&gt;，是一个&lt;strong&gt;供应商中立&lt;/strong&gt;的、开源的可观测性框架， 可用于&lt;strong&gt;插桩&lt;/strong&gt;、&lt;strong&gt;生成&lt;/strong&gt;、&lt;strong&gt;采集&lt;/strong&gt;和&lt;strong&gt;导出&lt;/strong&gt;链路、 指标和日志等遥测数据&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img src=&quot;https://observability-1253868755.cos.ap-guangzhou.myqcloud.com/otel-diagram.svg&quot; alt=&quot;otel-diagram&quot;&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="Cloud Native" scheme="https://blog.zhongmingmao.top/categories/cloud-native/"/>
    
    <category term="Observability" scheme="https://blog.zhongmingmao.top/categories/cloud-native/observability/"/>
    
    
    <category term="Cloud Native" scheme="https://blog.zhongmingmao.top/tags/cloud-native/"/>
    
    <category term="Observability" scheme="https://blog.zhongmingmao.top/tags/observability/"/>
    
    <category term="OpenTelemetry" scheme="https://blog.zhongmingmao.top/tags/opentelemetry/"/>
    
  </entry>
  
  <entry>
    <title>eBPF - Principle</title>
    <link href="https://blog.zhongmingmao.top/2024/10/18/ebpf-principle/"/>
    <id>https://blog.zhongmingmao.top/2024/10/18/ebpf-principle/</id>
    <published>2024-10-17T16:06:25.000Z</published>
    <updated>2025-02-06T17:23:07.520Z</updated>
    
    
    <summary type="html">&lt;h1 id=&quot;发展历程&quot;&gt;&lt;a href=&quot;#发展历程&quot; class=&quot;headerlink&quot; title=&quot;发展历程&quot;&gt;&lt;/a&gt;发展历程&lt;/h1&gt;&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;1992&lt;/strong&gt; 年，在 BSD 操作系统中引入了&lt;strong&gt;革命性&lt;/strong&gt;的包过滤机制 &lt;strong&gt;BPF&lt;/strong&gt;，性能非常好&lt;/li&gt;
&lt;li&gt;BPF 的两大设计&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;内核态&lt;/strong&gt;引入一个新的&lt;strong&gt;虚拟机&lt;/strong&gt;，所有指令都在&lt;strong&gt;内核虚拟机&lt;/strong&gt;中运行&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;用户态&lt;/strong&gt;使用 &lt;strong&gt;BPF 字节码&lt;/strong&gt;来定义&lt;strong&gt;过滤表达式&lt;/strong&gt;，然后&lt;strong&gt;传递给内核&lt;/strong&gt;，由内核虚拟机&lt;strong&gt;解释执行&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;BPF 使得&lt;strong&gt;包过滤&lt;/strong&gt;可以直接在&lt;strong&gt;内核&lt;/strong&gt;中执行，&lt;strong&gt;避免向用户态复制每个数据包&lt;/strong&gt;，从而极大提升了包过滤的性能，被各大&lt;strong&gt;操作系统&lt;/strong&gt;广泛接受&lt;/li&gt;
&lt;li&gt;BPF 诞生 5 年后，在 &lt;strong&gt;Linux 2.1.75&lt;/strong&gt; 首次&lt;strong&gt;引入&lt;/strong&gt;了 BPF 技术，在 &lt;strong&gt;Linux 3.0&lt;/strong&gt; 中增加的 &lt;strong&gt;BPF JIT&lt;/strong&gt;，替换掉性能更差的&lt;strong&gt;解释器&lt;/strong&gt;，进一步优化了 BPF 指令运行的&lt;strong&gt;效率&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;直到此时，&lt;strong&gt;BPF&lt;/strong&gt; 的应用领域还仅限于&lt;strong&gt;网络包过滤&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;2014&lt;/strong&gt; 年，将 BPF 扩展为一个&lt;strong&gt;通用的虚拟机&lt;/strong&gt;，即 &lt;strong&gt;eBPF&lt;/strong&gt;&lt;ul&gt;
&lt;li&gt;eBPF 不仅扩展了&lt;strong&gt;寄存器的数量&lt;/strong&gt;，引入了&lt;strong&gt;全新的 BPF 映射存储&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;还在 &lt;strong&gt;4.x&lt;/strong&gt; 内核中将原本&lt;strong&gt;单一的数据包过滤事件&lt;/strong&gt;逐步扩展到了&lt;strong&gt;内核态函数&lt;/strong&gt;、&lt;strong&gt;用户态函数&lt;/strong&gt;、&lt;strong&gt;跟踪点&lt;/strong&gt;、&lt;strong&gt;性能事件&lt;/strong&gt;以及&lt;strong&gt;安全控制&lt;/strong&gt;等&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;eBPF 的诞生了 BPF 技术的&lt;strong&gt;转折点&lt;/strong&gt;，使得 BPF 不再仅限于&lt;strong&gt;网络栈&lt;/strong&gt;，而是成为&lt;strong&gt;内核&lt;/strong&gt;的一个&lt;strong&gt;顶级子系统&lt;/strong&gt; - 最活跃&lt;/li&gt;
&lt;li&gt;eBPF 无需&lt;strong&gt;修改内核源码&lt;/strong&gt;和&lt;strong&gt;重新编译&lt;/strong&gt;就可以&lt;strong&gt;扩展内核&lt;/strong&gt;的功能&lt;/li&gt;
&lt;/ol&gt;</summary>
    
    
    
    <category term="eBPF" scheme="https://blog.zhongmingmao.top/categories/ebpf/"/>
    
    
    <category term="Observability" scheme="https://blog.zhongmingmao.top/tags/observability/"/>
    
    <category term="eBPF" scheme="https://blog.zhongmingmao.top/tags/ebpf/"/>
    
  </entry>
  
  <entry>
    <title>eBPF - Overview</title>
    <link href="https://blog.zhongmingmao.top/2024/10/17/ebpf-overview/"/>
    <id>https://blog.zhongmingmao.top/2024/10/17/ebpf-overview/</id>
    <published>2024-10-16T16:06:25.000Z</published>
    <updated>2025-02-06T15:57:37.966Z</updated>
    
    
    <summary type="html">&lt;h1 id=&quot;eBPF&quot;&gt;&lt;a href=&quot;#eBPF&quot; class=&quot;headerlink&quot; title=&quot;eBPF&quot;&gt;&lt;/a&gt;eBPF&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt;Extended Berkeley &lt;strong&gt;Packet Filter&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;eBPF&lt;/strong&gt; 是一种&lt;strong&gt;数据包过滤&lt;/strong&gt;技术，从 &lt;strong&gt;BPF&lt;/strong&gt; 技术扩展而来&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;BPF&lt;/strong&gt; 提供了一种在&lt;strong&gt;内核事件&lt;/strong&gt;和&lt;strong&gt;用户程序事件&lt;/strong&gt;发生时&lt;strong&gt;安全注入代码&lt;/strong&gt;的机制，让&lt;strong&gt;非内核开发人员&lt;/strong&gt;也可以对&lt;strong&gt;内核&lt;/strong&gt;进行&lt;strong&gt;控制&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;随着内核的发展，BPF 从最初的&lt;strong&gt;数据包过滤&lt;/strong&gt;，扩展到&lt;strong&gt;网络&lt;/strong&gt;、&lt;strong&gt;内核&lt;/strong&gt;、&lt;strong&gt;安全&lt;/strong&gt;、&lt;strong&gt;跟踪&lt;/strong&gt;等，扩展后的 BPF 被称为 &lt;strong&gt;eBPF&lt;/strong&gt;，早期的 BPF 被称为&lt;strong&gt;经典 BPF&lt;/strong&gt;，即 &lt;strong&gt;cBPF&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;现代内核&lt;/strong&gt;所运行的都是 &lt;strong&gt;eBPF&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;</summary>
    
    
    
    <category term="eBPF" scheme="https://blog.zhongmingmao.top/categories/ebpf/"/>
    
    
    <category term="Observability" scheme="https://blog.zhongmingmao.top/tags/observability/"/>
    
    <category term="eBPF" scheme="https://blog.zhongmingmao.top/tags/ebpf/"/>
    
  </entry>
  
  <entry>
    <title>Java Feature - Switch Pattern Matching</title>
    <link href="https://blog.zhongmingmao.top/2024/10/16/java-feature-switch-pattern-matching/"/>
    <id>https://blog.zhongmingmao.top/2024/10/16/java-feature-switch-pattern-matching/</id>
    <published>2024-10-15T16:06:25.000Z</published>
    <updated>2024-12-11T16:17:35.637Z</updated>
    
    
    <summary type="html">&lt;h1 id=&quot;OOP&quot;&gt;&lt;a href=&quot;#OOP&quot; class=&quot;headerlink&quot; title=&quot;OOP&quot;&gt;&lt;/a&gt;OOP&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt;存在潜在的&lt;strong&gt;兼容性&lt;/strong&gt;问题&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img src=&quot;https://java-feature-1253868755.cos.ap-guangzhou.myqcloud.com/image-20241211234823806.png&quot; alt=&quot;image-20241211234823806&quot;&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="Java" scheme="https://blog.zhongmingmao.top/categories/java/"/>
    
    <category term="Feature" scheme="https://blog.zhongmingmao.top/categories/java/feature/"/>
    
    
    <category term="Java" scheme="https://blog.zhongmingmao.top/tags/java/"/>
    
    <category term="Java Feature" scheme="https://blog.zhongmingmao.top/tags/java-feature/"/>
    
  </entry>
  
  <entry>
    <title>Java Feature - Switch</title>
    <link href="https://blog.zhongmingmao.top/2024/10/15/java-feature-switch/"/>
    <id>https://blog.zhongmingmao.top/2024/10/15/java-feature-switch/</id>
    <published>2024-10-14T16:06:25.000Z</published>
    <updated>2024-12-09T17:42:20.532Z</updated>
    
    
    <summary type="html">&lt;h1 id=&quot;概述&quot;&gt;&lt;a href=&quot;#概述&quot; class=&quot;headerlink&quot; title=&quot;概述&quot;&gt;&lt;/a&gt;概述&lt;/h1&gt;&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;Switch 表达式&lt;/strong&gt;在 &lt;strong&gt;JDK 14&lt;/strong&gt; 正式发布&lt;/li&gt;
&lt;li&gt;在 Java  规范中，表达式完成&lt;strong&gt;对数据的操作&lt;/strong&gt;&lt;ul&gt;
&lt;li&gt;表达式的结果：可以是一个&lt;strong&gt;数值&lt;/strong&gt;（i * 4），也可以是一个&lt;strong&gt;变量&lt;/strong&gt;（i &amp;#x3D; 4），或者&lt;strong&gt;什么都不是&lt;/strong&gt;（void 类型）&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Java 语句&lt;/strong&gt;是 Java &lt;strong&gt;最基本的可执行单位&lt;/strong&gt;，本身不是一个数值，也不是一个变量&lt;ul&gt;
&lt;li&gt;Java 语句的标志符号为&lt;strong&gt;分号（代码）&lt;/strong&gt;和&lt;strong&gt;双引号（代码块）&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;</summary>
    
    
    
    <category term="Java" scheme="https://blog.zhongmingmao.top/categories/java/"/>
    
    <category term="Feature" scheme="https://blog.zhongmingmao.top/categories/java/feature/"/>
    
    
    <category term="Java" scheme="https://blog.zhongmingmao.top/tags/java/"/>
    
    <category term="Java Feature" scheme="https://blog.zhongmingmao.top/tags/java-feature/"/>
    
  </entry>
  
  <entry>
    <title>Observability - OpenTelemetry</title>
    <link href="https://blog.zhongmingmao.top/2024/10/14/cloud-native-observability-opentelemetry/"/>
    <id>https://blog.zhongmingmao.top/2024/10/14/cloud-native-observability-opentelemetry/</id>
    <published>2024-10-13T16:06:25.000Z</published>
    <updated>2024-12-07T14:26:04.176Z</updated>
    
    
    <summary type="html">&lt;h1 id=&quot;简介&quot;&gt;&lt;a href=&quot;#简介&quot; class=&quot;headerlink&quot; title=&quot;简介&quot;&gt;&lt;/a&gt;简介&lt;/h1&gt;&lt;ol&gt;
&lt;li&gt;OpenTelemetry 简称 OTel，是 CNCF 的一个可观测性项目&lt;/li&gt;
&lt;li&gt;OpenTelemetry 旨在提供&lt;strong&gt;可观测性领域&lt;/strong&gt;的&lt;strong&gt;标准化方案&lt;/strong&gt;&lt;ul&gt;
&lt;li&gt;解决&lt;strong&gt;遥测数据&lt;/strong&gt;的&lt;strong&gt;数据建模&lt;/strong&gt;、&lt;strong&gt;采集&lt;/strong&gt;、&lt;strong&gt;处理&lt;/strong&gt;和&lt;strong&gt;导出&lt;/strong&gt;等标准化问题，并能将数据发送到&lt;strong&gt;后端&lt;/strong&gt; - 避免&lt;strong&gt;厂商锁定&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;</summary>
    
    
    
    <category term="Cloud Native" scheme="https://blog.zhongmingmao.top/categories/cloud-native/"/>
    
    <category term="Observability" scheme="https://blog.zhongmingmao.top/categories/cloud-native/observability/"/>
    
    
    <category term="Cloud Native" scheme="https://blog.zhongmingmao.top/tags/cloud-native/"/>
    
    <category term="Observability" scheme="https://blog.zhongmingmao.top/tags/observability/"/>
    
  </entry>
  
</feed>
